/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VulnerabilityCWE type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityCWE{}

// VulnerabilityCWE struct for VulnerabilityCWE
type VulnerabilityCWE struct {
	ID    *string `json:"ID,omitempty"`
	Lang  *string `json:"lang,omitempty"`
	Value *string `json:"Value,omitempty"`
}

// NewVulnerabilityCWE instantiates a new VulnerabilityCWE object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityCWE() *VulnerabilityCWE {
	this := VulnerabilityCWE{}
	return &this
}

// NewVulnerabilityCWEWithDefaults instantiates a new VulnerabilityCWE object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityCWEWithDefaults() *VulnerabilityCWE {
	this := VulnerabilityCWE{}
	return &this
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *VulnerabilityCWE) GetID() string {
	if o == nil || IsNil(o.ID) {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityCWE) GetIDOk() (*string, bool) {
	if o == nil || IsNil(o.ID) {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *VulnerabilityCWE) HasID() bool {
	if o != nil && !IsNil(o.ID) {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *VulnerabilityCWE) SetID(v string) {
	o.ID = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *VulnerabilityCWE) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityCWE) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *VulnerabilityCWE) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *VulnerabilityCWE) SetLang(v string) {
	o.Lang = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *VulnerabilityCWE) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityCWE) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *VulnerabilityCWE) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *VulnerabilityCWE) SetValue(v string) {
	o.Value = &v
}

func (o VulnerabilityCWE) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityCWE) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ID) {
		toSerialize["ID"] = o.ID
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Value) {
		toSerialize["Value"] = o.Value
	}
	return toSerialize, nil
}

type NullableVulnerabilityCWE struct {
	value *VulnerabilityCWE
	isSet bool
}

func (v NullableVulnerabilityCWE) Get() *VulnerabilityCWE {
	return v.value
}

func (v *NullableVulnerabilityCWE) Set(val *VulnerabilityCWE) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityCWE) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityCWE) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityCWE(val *VulnerabilityCWE) *NullableVulnerabilityCWE {
	return &NullableVulnerabilityCWE{value: val, isSet: true}
}

func (v NullableVulnerabilityCWE) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityCWE) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
