/*
MSRC CVRF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EdmReferentialConstraintPropertyPair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdmReferentialConstraintPropertyPair{}

// EdmReferentialConstraintPropertyPair struct for EdmReferentialConstraintPropertyPair
type EdmReferentialConstraintPropertyPair struct {
	DependentProperty *IEdmStructuralProperty `json:"dependentProperty,omitempty"`
	PrincipalProperty *IEdmStructuralProperty `json:"principalProperty,omitempty"`
}

// NewEdmReferentialConstraintPropertyPair instantiates a new EdmReferentialConstraintPropertyPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdmReferentialConstraintPropertyPair() *EdmReferentialConstraintPropertyPair {
	this := EdmReferentialConstraintPropertyPair{}
	return &this
}

// NewEdmReferentialConstraintPropertyPairWithDefaults instantiates a new EdmReferentialConstraintPropertyPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdmReferentialConstraintPropertyPairWithDefaults() *EdmReferentialConstraintPropertyPair {
	this := EdmReferentialConstraintPropertyPair{}
	return &this
}

// GetDependentProperty returns the DependentProperty field value if set, zero value otherwise.
func (o *EdmReferentialConstraintPropertyPair) GetDependentProperty() IEdmStructuralProperty {
	if o == nil || IsNil(o.DependentProperty) {
		var ret IEdmStructuralProperty
		return ret
	}
	return *o.DependentProperty
}

// GetDependentPropertyOk returns a tuple with the DependentProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdmReferentialConstraintPropertyPair) GetDependentPropertyOk() (*IEdmStructuralProperty, bool) {
	if o == nil || IsNil(o.DependentProperty) {
		return nil, false
	}
	return o.DependentProperty, true
}

// HasDependentProperty returns a boolean if a field has been set.
func (o *EdmReferentialConstraintPropertyPair) HasDependentProperty() bool {
	if o != nil && !IsNil(o.DependentProperty) {
		return true
	}

	return false
}

// SetDependentProperty gets a reference to the given IEdmStructuralProperty and assigns it to the DependentProperty field.
func (o *EdmReferentialConstraintPropertyPair) SetDependentProperty(v IEdmStructuralProperty) {
	o.DependentProperty = &v
}

// GetPrincipalProperty returns the PrincipalProperty field value if set, zero value otherwise.
func (o *EdmReferentialConstraintPropertyPair) GetPrincipalProperty() IEdmStructuralProperty {
	if o == nil || IsNil(o.PrincipalProperty) {
		var ret IEdmStructuralProperty
		return ret
	}
	return *o.PrincipalProperty
}

// GetPrincipalPropertyOk returns a tuple with the PrincipalProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdmReferentialConstraintPropertyPair) GetPrincipalPropertyOk() (*IEdmStructuralProperty, bool) {
	if o == nil || IsNil(o.PrincipalProperty) {
		return nil, false
	}
	return o.PrincipalProperty, true
}

// HasPrincipalProperty returns a boolean if a field has been set.
func (o *EdmReferentialConstraintPropertyPair) HasPrincipalProperty() bool {
	if o != nil && !IsNil(o.PrincipalProperty) {
		return true
	}

	return false
}

// SetPrincipalProperty gets a reference to the given IEdmStructuralProperty and assigns it to the PrincipalProperty field.
func (o *EdmReferentialConstraintPropertyPair) SetPrincipalProperty(v IEdmStructuralProperty) {
	o.PrincipalProperty = &v
}

func (o EdmReferentialConstraintPropertyPair) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdmReferentialConstraintPropertyPair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DependentProperty) {
		toSerialize["dependentProperty"] = o.DependentProperty
	}
	if !IsNil(o.PrincipalProperty) {
		toSerialize["principalProperty"] = o.PrincipalProperty
	}
	return toSerialize, nil
}

type NullableEdmReferentialConstraintPropertyPair struct {
	value *EdmReferentialConstraintPropertyPair
	isSet bool
}

func (v NullableEdmReferentialConstraintPropertyPair) Get() *EdmReferentialConstraintPropertyPair {
	return v.value
}

func (v *NullableEdmReferentialConstraintPropertyPair) Set(val *EdmReferentialConstraintPropertyPair) {
	v.value = val
	v.isSet = true
}

func (v NullableEdmReferentialConstraintPropertyPair) IsSet() bool {
	return v.isSet
}

func (v *NullableEdmReferentialConstraintPropertyPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdmReferentialConstraintPropertyPair(val *EdmReferentialConstraintPropertyPair) *NullableEdmReferentialConstraintPropertyPair {
	return &NullableEdmReferentialConstraintPropertyPair{value: val, isSet: true}
}

func (v NullableEdmReferentialConstraintPropertyPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdmReferentialConstraintPropertyPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
