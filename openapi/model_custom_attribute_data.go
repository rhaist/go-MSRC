/*
MSRC CVRF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomAttributeData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomAttributeData{}

// CustomAttributeData struct for CustomAttributeData
type CustomAttributeData struct {
	AttributeType        *Type                          `json:"attributeType,omitempty"`
	Constructor          *ConstructorInfo               `json:"constructor,omitempty"`
	ConstructorArguments []CustomAttributeTypedArgument `json:"constructorArguments,omitempty"`
	NamedArguments       []CustomAttributeNamedArgument `json:"namedArguments,omitempty"`
}

// NewCustomAttributeData instantiates a new CustomAttributeData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomAttributeData() *CustomAttributeData {
	this := CustomAttributeData{}
	return &this
}

// NewCustomAttributeDataWithDefaults instantiates a new CustomAttributeData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomAttributeDataWithDefaults() *CustomAttributeData {
	this := CustomAttributeData{}
	return &this
}

// GetAttributeType returns the AttributeType field value if set, zero value otherwise.
func (o *CustomAttributeData) GetAttributeType() Type {
	if o == nil || IsNil(o.AttributeType) {
		var ret Type
		return ret
	}
	return *o.AttributeType
}

// GetAttributeTypeOk returns a tuple with the AttributeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttributeData) GetAttributeTypeOk() (*Type, bool) {
	if o == nil || IsNil(o.AttributeType) {
		return nil, false
	}
	return o.AttributeType, true
}

// HasAttributeType returns a boolean if a field has been set.
func (o *CustomAttributeData) HasAttributeType() bool {
	if o != nil && !IsNil(o.AttributeType) {
		return true
	}

	return false
}

// SetAttributeType gets a reference to the given Type and assigns it to the AttributeType field.
func (o *CustomAttributeData) SetAttributeType(v Type) {
	o.AttributeType = &v
}

// GetConstructor returns the Constructor field value if set, zero value otherwise.
func (o *CustomAttributeData) GetConstructor() ConstructorInfo {
	if o == nil || IsNil(o.Constructor) {
		var ret ConstructorInfo
		return ret
	}
	return *o.Constructor
}

// GetConstructorOk returns a tuple with the Constructor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomAttributeData) GetConstructorOk() (*ConstructorInfo, bool) {
	if o == nil || IsNil(o.Constructor) {
		return nil, false
	}
	return o.Constructor, true
}

// HasConstructor returns a boolean if a field has been set.
func (o *CustomAttributeData) HasConstructor() bool {
	if o != nil && !IsNil(o.Constructor) {
		return true
	}

	return false
}

// SetConstructor gets a reference to the given ConstructorInfo and assigns it to the Constructor field.
func (o *CustomAttributeData) SetConstructor(v ConstructorInfo) {
	o.Constructor = &v
}

// GetConstructorArguments returns the ConstructorArguments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomAttributeData) GetConstructorArguments() []CustomAttributeTypedArgument {
	if o == nil {
		var ret []CustomAttributeTypedArgument
		return ret
	}
	return o.ConstructorArguments
}

// GetConstructorArgumentsOk returns a tuple with the ConstructorArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomAttributeData) GetConstructorArgumentsOk() ([]CustomAttributeTypedArgument, bool) {
	if o == nil || IsNil(o.ConstructorArguments) {
		return nil, false
	}
	return o.ConstructorArguments, true
}

// HasConstructorArguments returns a boolean if a field has been set.
func (o *CustomAttributeData) HasConstructorArguments() bool {
	if o != nil && !IsNil(o.ConstructorArguments) {
		return true
	}

	return false
}

// SetConstructorArguments gets a reference to the given []CustomAttributeTypedArgument and assigns it to the ConstructorArguments field.
func (o *CustomAttributeData) SetConstructorArguments(v []CustomAttributeTypedArgument) {
	o.ConstructorArguments = v
}

// GetNamedArguments returns the NamedArguments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomAttributeData) GetNamedArguments() []CustomAttributeNamedArgument {
	if o == nil {
		var ret []CustomAttributeNamedArgument
		return ret
	}
	return o.NamedArguments
}

// GetNamedArgumentsOk returns a tuple with the NamedArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomAttributeData) GetNamedArgumentsOk() ([]CustomAttributeNamedArgument, bool) {
	if o == nil || IsNil(o.NamedArguments) {
		return nil, false
	}
	return o.NamedArguments, true
}

// HasNamedArguments returns a boolean if a field has been set.
func (o *CustomAttributeData) HasNamedArguments() bool {
	if o != nil && !IsNil(o.NamedArguments) {
		return true
	}

	return false
}

// SetNamedArguments gets a reference to the given []CustomAttributeNamedArgument and assigns it to the NamedArguments field.
func (o *CustomAttributeData) SetNamedArguments(v []CustomAttributeNamedArgument) {
	o.NamedArguments = v
}

func (o CustomAttributeData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomAttributeData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeType) {
		toSerialize["attributeType"] = o.AttributeType
	}
	if !IsNil(o.Constructor) {
		toSerialize["constructor"] = o.Constructor
	}
	if o.ConstructorArguments != nil {
		toSerialize["constructorArguments"] = o.ConstructorArguments
	}
	if o.NamedArguments != nil {
		toSerialize["namedArguments"] = o.NamedArguments
	}
	return toSerialize, nil
}

type NullableCustomAttributeData struct {
	value *CustomAttributeData
	isSet bool
}

func (v NullableCustomAttributeData) Get() *CustomAttributeData {
	return v.value
}

func (v *NullableCustomAttributeData) Set(val *CustomAttributeData) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomAttributeData) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomAttributeData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomAttributeData(val *CustomAttributeData) *NullableCustomAttributeData {
	return &NullableCustomAttributeData{value: val, isSet: true}
}

func (v NullableCustomAttributeData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomAttributeData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
