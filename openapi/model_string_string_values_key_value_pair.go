/*
MSRC CVRF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StringStringValuesKeyValuePair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StringStringValuesKeyValuePair{}

// StringStringValuesKeyValuePair struct for StringStringValuesKeyValuePair
type StringStringValuesKeyValuePair struct {
	Key   NullableString `json:"key,omitempty"`
	Value []string       `json:"value,omitempty"`
}

// NewStringStringValuesKeyValuePair instantiates a new StringStringValuesKeyValuePair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStringStringValuesKeyValuePair() *StringStringValuesKeyValuePair {
	this := StringStringValuesKeyValuePair{}
	return &this
}

// NewStringStringValuesKeyValuePairWithDefaults instantiates a new StringStringValuesKeyValuePair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStringStringValuesKeyValuePairWithDefaults() *StringStringValuesKeyValuePair {
	this := StringStringValuesKeyValuePair{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StringStringValuesKeyValuePair) GetKey() string {
	if o == nil || IsNil(o.Key.Get()) {
		var ret string
		return ret
	}
	return *o.Key.Get()
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StringStringValuesKeyValuePair) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Key.Get(), o.Key.IsSet()
}

// HasKey returns a boolean if a field has been set.
func (o *StringStringValuesKeyValuePair) HasKey() bool {
	if o != nil && o.Key.IsSet() {
		return true
	}

	return false
}

// SetKey gets a reference to the given NullableString and assigns it to the Key field.
func (o *StringStringValuesKeyValuePair) SetKey(v string) {
	o.Key.Set(&v)
}

// SetKeyNil sets the value for Key to be an explicit nil
func (o *StringStringValuesKeyValuePair) SetKeyNil() {
	o.Key.Set(nil)
}

// UnsetKey ensures that no value is present for Key, not even an explicit nil
func (o *StringStringValuesKeyValuePair) UnsetKey() {
	o.Key.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *StringStringValuesKeyValuePair) GetValue() []string {
	if o == nil || IsNil(o.Value) {
		var ret []string
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StringStringValuesKeyValuePair) GetValueOk() ([]string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *StringStringValuesKeyValuePair) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []string and assigns it to the Value field.
func (o *StringStringValuesKeyValuePair) SetValue(v []string) {
	o.Value = v
}

func (o StringStringValuesKeyValuePair) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StringStringValuesKeyValuePair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Key.IsSet() {
		toSerialize["key"] = o.Key.Get()
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableStringStringValuesKeyValuePair struct {
	value *StringStringValuesKeyValuePair
	isSet bool
}

func (v NullableStringStringValuesKeyValuePair) Get() *StringStringValuesKeyValuePair {
	return v.value
}

func (v *NullableStringStringValuesKeyValuePair) Set(val *StringStringValuesKeyValuePair) {
	v.value = val
	v.isSet = true
}

func (v NullableStringStringValuesKeyValuePair) IsSet() bool {
	return v.isSet
}

func (v *NullableStringStringValuesKeyValuePair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStringStringValuesKeyValuePair(val *StringStringValuesKeyValuePair) *NullableStringStringValuesKeyValuePair {
	return &NullableStringStringValuesKeyValuePair{value: val, isSet: true}
}

func (v NullableStringStringValuesKeyValuePair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStringStringValuesKeyValuePair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
