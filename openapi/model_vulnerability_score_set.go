/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VulnerabilityScoreSet struct for VulnerabilityScoreSet
type VulnerabilityScoreSet struct {
	BaseScore          *float64  `json:"BaseScore,omitempty"`
	TemporalScore      *float64  `json:"TemporalScore,omitempty"`
	EnvironmentalScore *float64  `json:"EnvironmentalScore,omitempty"`
	Vector             *string   `json:"Vector,omitempty"`
	ProductID          *[]string `json:"ProductID,omitempty"`
}

// NewVulnerabilityScoreSet instantiates a new VulnerabilityScoreSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityScoreSet() *VulnerabilityScoreSet {
	this := VulnerabilityScoreSet{}
	return &this
}

// NewVulnerabilityScoreSetWithDefaults instantiates a new VulnerabilityScoreSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityScoreSetWithDefaults() *VulnerabilityScoreSet {
	this := VulnerabilityScoreSet{}
	return &this
}

// GetBaseScore returns the BaseScore field value if set, zero value otherwise.
func (o *VulnerabilityScoreSet) GetBaseScore() float64 {
	if o == nil || o.BaseScore == nil {
		var ret float64
		return ret
	}
	return *o.BaseScore
}

// GetBaseScoreOk returns a tuple with the BaseScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityScoreSet) GetBaseScoreOk() (*float64, bool) {
	if o == nil || o.BaseScore == nil {
		return nil, false
	}
	return o.BaseScore, true
}

// HasBaseScore returns a boolean if a field has been set.
func (o *VulnerabilityScoreSet) HasBaseScore() bool {
	if o != nil && o.BaseScore != nil {
		return true
	}

	return false
}

// SetBaseScore gets a reference to the given float64 and assigns it to the BaseScore field.
func (o *VulnerabilityScoreSet) SetBaseScore(v float64) {
	o.BaseScore = &v
}

// GetTemporalScore returns the TemporalScore field value if set, zero value otherwise.
func (o *VulnerabilityScoreSet) GetTemporalScore() float64 {
	if o == nil || o.TemporalScore == nil {
		var ret float64
		return ret
	}
	return *o.TemporalScore
}

// GetTemporalScoreOk returns a tuple with the TemporalScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityScoreSet) GetTemporalScoreOk() (*float64, bool) {
	if o == nil || o.TemporalScore == nil {
		return nil, false
	}
	return o.TemporalScore, true
}

// HasTemporalScore returns a boolean if a field has been set.
func (o *VulnerabilityScoreSet) HasTemporalScore() bool {
	if o != nil && o.TemporalScore != nil {
		return true
	}

	return false
}

// SetTemporalScore gets a reference to the given float64 and assigns it to the TemporalScore field.
func (o *VulnerabilityScoreSet) SetTemporalScore(v float64) {
	o.TemporalScore = &v
}

// GetEnvironmentalScore returns the EnvironmentalScore field value if set, zero value otherwise.
func (o *VulnerabilityScoreSet) GetEnvironmentalScore() float64 {
	if o == nil || o.EnvironmentalScore == nil {
		var ret float64
		return ret
	}
	return *o.EnvironmentalScore
}

// GetEnvironmentalScoreOk returns a tuple with the EnvironmentalScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityScoreSet) GetEnvironmentalScoreOk() (*float64, bool) {
	if o == nil || o.EnvironmentalScore == nil {
		return nil, false
	}
	return o.EnvironmentalScore, true
}

// HasEnvironmentalScore returns a boolean if a field has been set.
func (o *VulnerabilityScoreSet) HasEnvironmentalScore() bool {
	if o != nil && o.EnvironmentalScore != nil {
		return true
	}

	return false
}

// SetEnvironmentalScore gets a reference to the given float64 and assigns it to the EnvironmentalScore field.
func (o *VulnerabilityScoreSet) SetEnvironmentalScore(v float64) {
	o.EnvironmentalScore = &v
}

// GetVector returns the Vector field value if set, zero value otherwise.
func (o *VulnerabilityScoreSet) GetVector() string {
	if o == nil || o.Vector == nil {
		var ret string
		return ret
	}
	return *o.Vector
}

// GetVectorOk returns a tuple with the Vector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityScoreSet) GetVectorOk() (*string, bool) {
	if o == nil || o.Vector == nil {
		return nil, false
	}
	return o.Vector, true
}

// HasVector returns a boolean if a field has been set.
func (o *VulnerabilityScoreSet) HasVector() bool {
	if o != nil && o.Vector != nil {
		return true
	}

	return false
}

// SetVector gets a reference to the given string and assigns it to the Vector field.
func (o *VulnerabilityScoreSet) SetVector(v string) {
	o.Vector = &v
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *VulnerabilityScoreSet) GetProductID() []string {
	if o == nil || o.ProductID == nil {
		var ret []string
		return ret
	}
	return *o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityScoreSet) GetProductIDOk() (*[]string, bool) {
	if o == nil || o.ProductID == nil {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *VulnerabilityScoreSet) HasProductID() bool {
	if o != nil && o.ProductID != nil {
		return true
	}

	return false
}

// SetProductID gets a reference to the given []string and assigns it to the ProductID field.
func (o *VulnerabilityScoreSet) SetProductID(v []string) {
	o.ProductID = &v
}

func (o VulnerabilityScoreSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BaseScore != nil {
		toSerialize["BaseScore"] = o.BaseScore
	}
	if o.TemporalScore != nil {
		toSerialize["TemporalScore"] = o.TemporalScore
	}
	if o.EnvironmentalScore != nil {
		toSerialize["EnvironmentalScore"] = o.EnvironmentalScore
	}
	if o.Vector != nil {
		toSerialize["Vector"] = o.Vector
	}
	if o.ProductID != nil {
		toSerialize["ProductID"] = o.ProductID
	}
	return json.Marshal(toSerialize)
}

type NullableVulnerabilityScoreSet struct {
	value *VulnerabilityScoreSet
	isSet bool
}

func (v NullableVulnerabilityScoreSet) Get() *VulnerabilityScoreSet {
	return v.value
}

func (v *NullableVulnerabilityScoreSet) Set(val *VulnerabilityScoreSet) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityScoreSet) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityScoreSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityScoreSet(val *VulnerabilityScoreSet) *NullableVulnerabilityScoreSet {
	return &NullableVulnerabilityScoreSet{value: val, isSet: true}
}

func (v NullableVulnerabilityScoreSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityScoreSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
