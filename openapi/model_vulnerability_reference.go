/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VulnerabilityReference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityReference{}

// VulnerabilityReference struct for VulnerabilityReference
type VulnerabilityReference struct {
	URL         *string                            `json:"URL,omitempty"`
	Description *VulnerabilityReferenceDescription `json:"Description,omitempty"`
	Type        *int32                             `json:"Type,omitempty"`
}

// NewVulnerabilityReference instantiates a new VulnerabilityReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityReference() *VulnerabilityReference {
	this := VulnerabilityReference{}
	return &this
}

// NewVulnerabilityReferenceWithDefaults instantiates a new VulnerabilityReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityReferenceWithDefaults() *VulnerabilityReference {
	this := VulnerabilityReference{}
	return &this
}

// GetURL returns the URL field value if set, zero value otherwise.
func (o *VulnerabilityReference) GetURL() string {
	if o == nil || IsNil(o.URL) {
		var ret string
		return ret
	}
	return *o.URL
}

// GetURLOk returns a tuple with the URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityReference) GetURLOk() (*string, bool) {
	if o == nil || IsNil(o.URL) {
		return nil, false
	}
	return o.URL, true
}

// HasURL returns a boolean if a field has been set.
func (o *VulnerabilityReference) HasURL() bool {
	if o != nil && !IsNil(o.URL) {
		return true
	}

	return false
}

// SetURL gets a reference to the given string and assigns it to the URL field.
func (o *VulnerabilityReference) SetURL(v string) {
	o.URL = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VulnerabilityReference) GetDescription() VulnerabilityReferenceDescription {
	if o == nil || IsNil(o.Description) {
		var ret VulnerabilityReferenceDescription
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityReference) GetDescriptionOk() (*VulnerabilityReferenceDescription, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VulnerabilityReference) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given VulnerabilityReferenceDescription and assigns it to the Description field.
func (o *VulnerabilityReference) SetDescription(v VulnerabilityReferenceDescription) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VulnerabilityReference) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityReference) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VulnerabilityReference) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *VulnerabilityReference) SetType(v int32) {
	o.Type = &v
}

func (o VulnerabilityReference) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityReference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.URL) {
		toSerialize["URL"] = o.URL
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	return toSerialize, nil
}

type NullableVulnerabilityReference struct {
	value *VulnerabilityReference
	isSet bool
}

func (v NullableVulnerabilityReference) Get() *VulnerabilityReference {
	return v.value
}

func (v *NullableVulnerabilityReference) Set(val *VulnerabilityReference) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityReference) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityReference(val *VulnerabilityReference) *NullableVulnerabilityReference {
	return &NullableVulnerabilityReference{value: val, isSet: true}
}

func (v NullableVulnerabilityReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
