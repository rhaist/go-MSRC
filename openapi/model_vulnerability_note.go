/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VulnerabilityNote type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityNote{}

// VulnerabilityNote struct for VulnerabilityNote
type VulnerabilityNote struct {
	Title    *string `json:"Title,omitempty"`
	Audience *string `json:"Audience,omitempty"`
	Type     *int32  `json:"Type,omitempty"`
	Ordinal  *string `json:"Ordinal,omitempty"`
	Lang     *string `json:"lang,omitempty"`
	Value    *string `json:"Value,omitempty"`
}

// NewVulnerabilityNote instantiates a new VulnerabilityNote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityNote() *VulnerabilityNote {
	this := VulnerabilityNote{}
	return &this
}

// NewVulnerabilityNoteWithDefaults instantiates a new VulnerabilityNote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityNoteWithDefaults() *VulnerabilityNote {
	this := VulnerabilityNote{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *VulnerabilityNote) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityNote) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *VulnerabilityNote) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *VulnerabilityNote) SetTitle(v string) {
	o.Title = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *VulnerabilityNote) GetAudience() string {
	if o == nil || IsNil(o.Audience) {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityNote) GetAudienceOk() (*string, bool) {
	if o == nil || IsNil(o.Audience) {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *VulnerabilityNote) HasAudience() bool {
	if o != nil && !IsNil(o.Audience) {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *VulnerabilityNote) SetAudience(v string) {
	o.Audience = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VulnerabilityNote) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityNote) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VulnerabilityNote) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *VulnerabilityNote) SetType(v int32) {
	o.Type = &v
}

// GetOrdinal returns the Ordinal field value if set, zero value otherwise.
func (o *VulnerabilityNote) GetOrdinal() string {
	if o == nil || IsNil(o.Ordinal) {
		var ret string
		return ret
	}
	return *o.Ordinal
}

// GetOrdinalOk returns a tuple with the Ordinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityNote) GetOrdinalOk() (*string, bool) {
	if o == nil || IsNil(o.Ordinal) {
		return nil, false
	}
	return o.Ordinal, true
}

// HasOrdinal returns a boolean if a field has been set.
func (o *VulnerabilityNote) HasOrdinal() bool {
	if o != nil && !IsNil(o.Ordinal) {
		return true
	}

	return false
}

// SetOrdinal gets a reference to the given string and assigns it to the Ordinal field.
func (o *VulnerabilityNote) SetOrdinal(v string) {
	o.Ordinal = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *VulnerabilityNote) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityNote) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *VulnerabilityNote) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *VulnerabilityNote) SetLang(v string) {
	o.Lang = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *VulnerabilityNote) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityNote) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *VulnerabilityNote) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *VulnerabilityNote) SetValue(v string) {
	o.Value = &v
}

func (o VulnerabilityNote) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityNote) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["Title"] = o.Title
	}
	if !IsNil(o.Audience) {
		toSerialize["Audience"] = o.Audience
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Ordinal) {
		toSerialize["Ordinal"] = o.Ordinal
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Value) {
		toSerialize["Value"] = o.Value
	}
	return toSerialize, nil
}

type NullableVulnerabilityNote struct {
	value *VulnerabilityNote
	isSet bool
}

func (v NullableVulnerabilityNote) Get() *VulnerabilityNote {
	return v.value
}

func (v *NullableVulnerabilityNote) Set(val *VulnerabilityNote) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityNote) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityNote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityNote(val *VulnerabilityNote) *NullableVulnerabilityNote {
	return &NullableVulnerabilityNote{value: val, isSet: true}
}

func (v NullableVulnerabilityNote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityNote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
