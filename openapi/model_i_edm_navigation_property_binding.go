/*
MSRC CVRF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IEdmNavigationPropertyBinding type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IEdmNavigationPropertyBinding{}

// IEdmNavigationPropertyBinding struct for IEdmNavigationPropertyBinding
type IEdmNavigationPropertyBinding struct {
	NavigationProperty *IEdmNavigationProperty `json:"navigationProperty,omitempty"`
	Target             *IEdmNavigationSource   `json:"target,omitempty"`
	Path               *IEdmPathExpression     `json:"path,omitempty"`
}

// NewIEdmNavigationPropertyBinding instantiates a new IEdmNavigationPropertyBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIEdmNavigationPropertyBinding() *IEdmNavigationPropertyBinding {
	this := IEdmNavigationPropertyBinding{}
	return &this
}

// NewIEdmNavigationPropertyBindingWithDefaults instantiates a new IEdmNavigationPropertyBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIEdmNavigationPropertyBindingWithDefaults() *IEdmNavigationPropertyBinding {
	this := IEdmNavigationPropertyBinding{}
	return &this
}

// GetNavigationProperty returns the NavigationProperty field value if set, zero value otherwise.
func (o *IEdmNavigationPropertyBinding) GetNavigationProperty() IEdmNavigationProperty {
	if o == nil || IsNil(o.NavigationProperty) {
		var ret IEdmNavigationProperty
		return ret
	}
	return *o.NavigationProperty
}

// GetNavigationPropertyOk returns a tuple with the NavigationProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IEdmNavigationPropertyBinding) GetNavigationPropertyOk() (*IEdmNavigationProperty, bool) {
	if o == nil || IsNil(o.NavigationProperty) {
		return nil, false
	}
	return o.NavigationProperty, true
}

// HasNavigationProperty returns a boolean if a field has been set.
func (o *IEdmNavigationPropertyBinding) HasNavigationProperty() bool {
	if o != nil && !IsNil(o.NavigationProperty) {
		return true
	}

	return false
}

// SetNavigationProperty gets a reference to the given IEdmNavigationProperty and assigns it to the NavigationProperty field.
func (o *IEdmNavigationPropertyBinding) SetNavigationProperty(v IEdmNavigationProperty) {
	o.NavigationProperty = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *IEdmNavigationPropertyBinding) GetTarget() IEdmNavigationSource {
	if o == nil || IsNil(o.Target) {
		var ret IEdmNavigationSource
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IEdmNavigationPropertyBinding) GetTargetOk() (*IEdmNavigationSource, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *IEdmNavigationPropertyBinding) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given IEdmNavigationSource and assigns it to the Target field.
func (o *IEdmNavigationPropertyBinding) SetTarget(v IEdmNavigationSource) {
	o.Target = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *IEdmNavigationPropertyBinding) GetPath() IEdmPathExpression {
	if o == nil || IsNil(o.Path) {
		var ret IEdmPathExpression
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IEdmNavigationPropertyBinding) GetPathOk() (*IEdmPathExpression, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *IEdmNavigationPropertyBinding) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given IEdmPathExpression and assigns it to the Path field.
func (o *IEdmNavigationPropertyBinding) SetPath(v IEdmPathExpression) {
	o.Path = &v
}

func (o IEdmNavigationPropertyBinding) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IEdmNavigationPropertyBinding) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NavigationProperty) {
		toSerialize["navigationProperty"] = o.NavigationProperty
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	return toSerialize, nil
}

type NullableIEdmNavigationPropertyBinding struct {
	value *IEdmNavigationPropertyBinding
	isSet bool
}

func (v NullableIEdmNavigationPropertyBinding) Get() *IEdmNavigationPropertyBinding {
	return v.value
}

func (v *NullableIEdmNavigationPropertyBinding) Set(val *IEdmNavigationPropertyBinding) {
	v.value = val
	v.isSet = true
}

func (v NullableIEdmNavigationPropertyBinding) IsSet() bool {
	return v.isSet
}

func (v *NullableIEdmNavigationPropertyBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIEdmNavigationPropertyBinding(val *IEdmNavigationPropertyBinding) *NullableIEdmNavigationPropertyBinding {
	return &NullableIEdmNavigationPropertyBinding{value: val, isSet: true}
}

func (v NullableIEdmNavigationPropertyBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIEdmNavigationPropertyBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
