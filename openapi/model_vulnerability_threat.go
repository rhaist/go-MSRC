/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the VulnerabilityThreat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityThreat{}

// VulnerabilityThreat struct for VulnerabilityThreat
type VulnerabilityThreat struct {
	Description   *VulnerabilityThreatDescription `json:"Description,omitempty"`
	ProductID     []string                        `json:"ProductID,omitempty"`
	GroupID       []string                        `json:"GroupID,omitempty"`
	Type          *int32                          `json:"Type,omitempty"`
	Date          *time.Time                      `json:"Date,omitempty"`
	DateSpecified *bool                           `json:"DateSpecified,omitempty"`
}

// NewVulnerabilityThreat instantiates a new VulnerabilityThreat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityThreat() *VulnerabilityThreat {
	this := VulnerabilityThreat{}
	return &this
}

// NewVulnerabilityThreatWithDefaults instantiates a new VulnerabilityThreat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityThreatWithDefaults() *VulnerabilityThreat {
	this := VulnerabilityThreat{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VulnerabilityThreat) GetDescription() VulnerabilityThreatDescription {
	if o == nil || IsNil(o.Description) {
		var ret VulnerabilityThreatDescription
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityThreat) GetDescriptionOk() (*VulnerabilityThreatDescription, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VulnerabilityThreat) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given VulnerabilityThreatDescription and assigns it to the Description field.
func (o *VulnerabilityThreat) SetDescription(v VulnerabilityThreatDescription) {
	o.Description = &v
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *VulnerabilityThreat) GetProductID() []string {
	if o == nil || IsNil(o.ProductID) {
		var ret []string
		return ret
	}
	return o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityThreat) GetProductIDOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductID) {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *VulnerabilityThreat) HasProductID() bool {
	if o != nil && !IsNil(o.ProductID) {
		return true
	}

	return false
}

// SetProductID gets a reference to the given []string and assigns it to the ProductID field.
func (o *VulnerabilityThreat) SetProductID(v []string) {
	o.ProductID = v
}

// GetGroupID returns the GroupID field value if set, zero value otherwise.
func (o *VulnerabilityThreat) GetGroupID() []string {
	if o == nil || IsNil(o.GroupID) {
		var ret []string
		return ret
	}
	return o.GroupID
}

// GetGroupIDOk returns a tuple with the GroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityThreat) GetGroupIDOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupID) {
		return nil, false
	}
	return o.GroupID, true
}

// HasGroupID returns a boolean if a field has been set.
func (o *VulnerabilityThreat) HasGroupID() bool {
	if o != nil && !IsNil(o.GroupID) {
		return true
	}

	return false
}

// SetGroupID gets a reference to the given []string and assigns it to the GroupID field.
func (o *VulnerabilityThreat) SetGroupID(v []string) {
	o.GroupID = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VulnerabilityThreat) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityThreat) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VulnerabilityThreat) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *VulnerabilityThreat) SetType(v int32) {
	o.Type = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *VulnerabilityThreat) GetDate() time.Time {
	if o == nil || IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityThreat) GetDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *VulnerabilityThreat) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *VulnerabilityThreat) SetDate(v time.Time) {
	o.Date = &v
}

// GetDateSpecified returns the DateSpecified field value if set, zero value otherwise.
func (o *VulnerabilityThreat) GetDateSpecified() bool {
	if o == nil || IsNil(o.DateSpecified) {
		var ret bool
		return ret
	}
	return *o.DateSpecified
}

// GetDateSpecifiedOk returns a tuple with the DateSpecified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityThreat) GetDateSpecifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.DateSpecified) {
		return nil, false
	}
	return o.DateSpecified, true
}

// HasDateSpecified returns a boolean if a field has been set.
func (o *VulnerabilityThreat) HasDateSpecified() bool {
	if o != nil && !IsNil(o.DateSpecified) {
		return true
	}

	return false
}

// SetDateSpecified gets a reference to the given bool and assigns it to the DateSpecified field.
func (o *VulnerabilityThreat) SetDateSpecified(v bool) {
	o.DateSpecified = &v
}

func (o VulnerabilityThreat) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityThreat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.ProductID) {
		toSerialize["ProductID"] = o.ProductID
	}
	if !IsNil(o.GroupID) {
		toSerialize["GroupID"] = o.GroupID
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Date) {
		toSerialize["Date"] = o.Date
	}
	if !IsNil(o.DateSpecified) {
		toSerialize["DateSpecified"] = o.DateSpecified
	}
	return toSerialize, nil
}

type NullableVulnerabilityThreat struct {
	value *VulnerabilityThreat
	isSet bool
}

func (v NullableVulnerabilityThreat) Get() *VulnerabilityThreat {
	return v.value
}

func (v *NullableVulnerabilityThreat) Set(val *VulnerabilityThreat) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityThreat) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityThreat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityThreat(val *VulnerabilityThreat) *NullableVulnerabilityThreat {
	return &NullableVulnerabilityThreat{value: val, isSet: true}
}

func (v NullableVulnerabilityThreat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityThreat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
