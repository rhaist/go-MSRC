/*
 * MSRC Public API
 *
 * This RESTful API can be used to engage the Microsoft Security Response Center (MSRC) in the following ways:    - Get security update summaries and details using the [Common Vulnerability Reporting Framework](https://www.icasi.org/cvrf) (CVRF).    - Report suspected cyberattacks or abuse originating from Microsoft Online Services.    - Notify Microsoft of any planned penetration tests against your Azure assets.    **Sample client code** is available on the Microsoft Security [Updates](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API) and [Engage](https://github.com/Microsoft/MSRC-Microsoft-Engage-API)   Github repositories.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CvrfdocDocumentTrackingIdentification struct for CvrfdocDocumentTrackingIdentification
type CvrfdocDocumentTrackingIdentification struct {
	ID    *CvrfdocDocumentTrackingIdentificationID    `json:"ID,omitempty"`
	Alias *CvrfdocDocumentTrackingIdentificationAlias `json:"Alias,omitempty"`
}

// NewCvrfdocDocumentTrackingIdentification instantiates a new CvrfdocDocumentTrackingIdentification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCvrfdocDocumentTrackingIdentification() *CvrfdocDocumentTrackingIdentification {
	this := CvrfdocDocumentTrackingIdentification{}
	return &this
}

// NewCvrfdocDocumentTrackingIdentificationWithDefaults instantiates a new CvrfdocDocumentTrackingIdentification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCvrfdocDocumentTrackingIdentificationWithDefaults() *CvrfdocDocumentTrackingIdentification {
	this := CvrfdocDocumentTrackingIdentification{}
	return &this
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *CvrfdocDocumentTrackingIdentification) GetID() CvrfdocDocumentTrackingIdentificationID {
	if o == nil || o.ID == nil {
		var ret CvrfdocDocumentTrackingIdentificationID
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTrackingIdentification) GetIDOk() (*CvrfdocDocumentTrackingIdentificationID, bool) {
	if o == nil || o.ID == nil {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *CvrfdocDocumentTrackingIdentification) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given CvrfdocDocumentTrackingIdentificationID and assigns it to the ID field.
func (o *CvrfdocDocumentTrackingIdentification) SetID(v CvrfdocDocumentTrackingIdentificationID) {
	o.ID = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *CvrfdocDocumentTrackingIdentification) GetAlias() CvrfdocDocumentTrackingIdentificationAlias {
	if o == nil || o.Alias == nil {
		var ret CvrfdocDocumentTrackingIdentificationAlias
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTrackingIdentification) GetAliasOk() (*CvrfdocDocumentTrackingIdentificationAlias, bool) {
	if o == nil || o.Alias == nil {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *CvrfdocDocumentTrackingIdentification) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given CvrfdocDocumentTrackingIdentificationAlias and assigns it to the Alias field.
func (o *CvrfdocDocumentTrackingIdentification) SetAlias(v CvrfdocDocumentTrackingIdentificationAlias) {
	o.Alias = &v
}

func (o CvrfdocDocumentTrackingIdentification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ID != nil {
		toSerialize["ID"] = o.ID
	}
	if o.Alias != nil {
		toSerialize["Alias"] = o.Alias
	}
	return json.Marshal(toSerialize)
}

type NullableCvrfdocDocumentTrackingIdentification struct {
	value *CvrfdocDocumentTrackingIdentification
	isSet bool
}

func (v NullableCvrfdocDocumentTrackingIdentification) Get() *CvrfdocDocumentTrackingIdentification {
	return v.value
}

func (v *NullableCvrfdocDocumentTrackingIdentification) Set(val *CvrfdocDocumentTrackingIdentification) {
	v.value = val
	v.isSet = true
}

func (v NullableCvrfdocDocumentTrackingIdentification) IsSet() bool {
	return v.isSet
}

func (v *NullableCvrfdocDocumentTrackingIdentification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCvrfdocDocumentTrackingIdentification(val *CvrfdocDocumentTrackingIdentification) *NullableCvrfdocDocumentTrackingIdentification {
	return &NullableCvrfdocDocumentTrackingIdentification{value: val, isSet: true}
}

func (v NullableCvrfdocDocumentTrackingIdentification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCvrfdocDocumentTrackingIdentification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
