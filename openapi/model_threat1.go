/*
 * MSRC Public API
 *
 * This RESTful API can be used to engage the Microsoft Security Response Center (MSRC) in the following ways:    - Get security update summaries and details using the [Common Vulnerability Reporting Framework](https://www.icasi.org/cvrf) (CVRF).    - Report suspected cyberattacks or abuse originating from Microsoft Online Services.    - Notify Microsoft of any planned penetration tests against your Azure assets.    **Sample client code** is available on the Microsoft Security [Updates](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API) and [Engage](https://github.com/Microsoft/MSRC-Microsoft-Engage-API)   Github repositories.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Threat1 an instance of abuse
type Threat1 struct {
	// threat type: activity or content
	ThreatType string `json:"threatType"`
	// threat subtype (depends on threat type)
	ThreatSubType string `json:"threatSubType"`
	// IP address sending unwanted traffic (required for activity threats)
	SourceIp *string `json:"sourceIp,omitempty"`
	// IP address receiving unwanted traffic (required for activity threats)
	DestinationIp *string `json:"destinationIp,omitempty"`
	// port sending unwanted traffic
	SourcePort *string `json:"sourcePort,omitempty"`
	// port receiving unwanted traffic
	DestinationPort *string `json:"destinationPort,omitempty"`
	// URL hosting abusive content (required for content threats)
	SourceUrl *string `json:"sourceUrl,omitempty"`
	// URL receiving abusive content (required for content threats)
	DestinationUrl *string `json:"destinationUrl,omitempty"`
	// [internet protocol number](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) of the protocol being used to send or serve abusive traffic or data
	Protocol *string `json:"protocol,omitempty"`
	// total number of bytes received for reported traffic (activity threats only)
	ByteCount *string `json:"byteCount,omitempty"`
	// total number of packets received for reported traffic (activity threats only)
	PacketCount *string `json:"packetCount,omitempty"`
	// date of abuse
	Date string `json:"date"`
	// time of abuse
	Time string `json:"time"`
	// reporter time zone
	TimeZone string `json:"timeZone"`
	// sample data/artifacts relating to abuse
	Sample *string `json:"sample,omitempty"`
	// [Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml) of sample (required if sample is provided)
	SampleType *string `json:"sampleType,omitempty"`
}

// NewThreat1 instantiates a new Threat1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreat1(threatType string, threatSubType string, date string, time string, timeZone string) *Threat1 {
	this := Threat1{}
	this.ThreatType = threatType
	this.ThreatSubType = threatSubType
	this.Date = date
	this.Time = time
	this.TimeZone = timeZone
	return &this
}

// NewThreat1WithDefaults instantiates a new Threat1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreat1WithDefaults() *Threat1 {
	this := Threat1{}
	return &this
}

// GetThreatType returns the ThreatType field value
func (o *Threat1) GetThreatType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThreatType
}

// GetThreatTypeOk returns a tuple with the ThreatType field value
// and a boolean to check if the value has been set.
func (o *Threat1) GetThreatTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThreatType, true
}

// SetThreatType sets field value
func (o *Threat1) SetThreatType(v string) {
	o.ThreatType = v
}

// GetThreatSubType returns the ThreatSubType field value
func (o *Threat1) GetThreatSubType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThreatSubType
}

// GetThreatSubTypeOk returns a tuple with the ThreatSubType field value
// and a boolean to check if the value has been set.
func (o *Threat1) GetThreatSubTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThreatSubType, true
}

// SetThreatSubType sets field value
func (o *Threat1) SetThreatSubType(v string) {
	o.ThreatSubType = v
}

// GetSourceIp returns the SourceIp field value if set, zero value otherwise.
func (o *Threat1) GetSourceIp() string {
	if o == nil || o.SourceIp == nil {
		var ret string
		return ret
	}
	return *o.SourceIp
}

// GetSourceIpOk returns a tuple with the SourceIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetSourceIpOk() (*string, bool) {
	if o == nil || o.SourceIp == nil {
		return nil, false
	}
	return o.SourceIp, true
}

// HasSourceIp returns a boolean if a field has been set.
func (o *Threat1) HasSourceIp() bool {
	if o != nil && o.SourceIp != nil {
		return true
	}

	return false
}

// SetSourceIp gets a reference to the given string and assigns it to the SourceIp field.
func (o *Threat1) SetSourceIp(v string) {
	o.SourceIp = &v
}

// GetDestinationIp returns the DestinationIp field value if set, zero value otherwise.
func (o *Threat1) GetDestinationIp() string {
	if o == nil || o.DestinationIp == nil {
		var ret string
		return ret
	}
	return *o.DestinationIp
}

// GetDestinationIpOk returns a tuple with the DestinationIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetDestinationIpOk() (*string, bool) {
	if o == nil || o.DestinationIp == nil {
		return nil, false
	}
	return o.DestinationIp, true
}

// HasDestinationIp returns a boolean if a field has been set.
func (o *Threat1) HasDestinationIp() bool {
	if o != nil && o.DestinationIp != nil {
		return true
	}

	return false
}

// SetDestinationIp gets a reference to the given string and assigns it to the DestinationIp field.
func (o *Threat1) SetDestinationIp(v string) {
	o.DestinationIp = &v
}

// GetSourcePort returns the SourcePort field value if set, zero value otherwise.
func (o *Threat1) GetSourcePort() string {
	if o == nil || o.SourcePort == nil {
		var ret string
		return ret
	}
	return *o.SourcePort
}

// GetSourcePortOk returns a tuple with the SourcePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetSourcePortOk() (*string, bool) {
	if o == nil || o.SourcePort == nil {
		return nil, false
	}
	return o.SourcePort, true
}

// HasSourcePort returns a boolean if a field has been set.
func (o *Threat1) HasSourcePort() bool {
	if o != nil && o.SourcePort != nil {
		return true
	}

	return false
}

// SetSourcePort gets a reference to the given string and assigns it to the SourcePort field.
func (o *Threat1) SetSourcePort(v string) {
	o.SourcePort = &v
}

// GetDestinationPort returns the DestinationPort field value if set, zero value otherwise.
func (o *Threat1) GetDestinationPort() string {
	if o == nil || o.DestinationPort == nil {
		var ret string
		return ret
	}
	return *o.DestinationPort
}

// GetDestinationPortOk returns a tuple with the DestinationPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetDestinationPortOk() (*string, bool) {
	if o == nil || o.DestinationPort == nil {
		return nil, false
	}
	return o.DestinationPort, true
}

// HasDestinationPort returns a boolean if a field has been set.
func (o *Threat1) HasDestinationPort() bool {
	if o != nil && o.DestinationPort != nil {
		return true
	}

	return false
}

// SetDestinationPort gets a reference to the given string and assigns it to the DestinationPort field.
func (o *Threat1) SetDestinationPort(v string) {
	o.DestinationPort = &v
}

// GetSourceUrl returns the SourceUrl field value if set, zero value otherwise.
func (o *Threat1) GetSourceUrl() string {
	if o == nil || o.SourceUrl == nil {
		var ret string
		return ret
	}
	return *o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetSourceUrlOk() (*string, bool) {
	if o == nil || o.SourceUrl == nil {
		return nil, false
	}
	return o.SourceUrl, true
}

// HasSourceUrl returns a boolean if a field has been set.
func (o *Threat1) HasSourceUrl() bool {
	if o != nil && o.SourceUrl != nil {
		return true
	}

	return false
}

// SetSourceUrl gets a reference to the given string and assigns it to the SourceUrl field.
func (o *Threat1) SetSourceUrl(v string) {
	o.SourceUrl = &v
}

// GetDestinationUrl returns the DestinationUrl field value if set, zero value otherwise.
func (o *Threat1) GetDestinationUrl() string {
	if o == nil || o.DestinationUrl == nil {
		var ret string
		return ret
	}
	return *o.DestinationUrl
}

// GetDestinationUrlOk returns a tuple with the DestinationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetDestinationUrlOk() (*string, bool) {
	if o == nil || o.DestinationUrl == nil {
		return nil, false
	}
	return o.DestinationUrl, true
}

// HasDestinationUrl returns a boolean if a field has been set.
func (o *Threat1) HasDestinationUrl() bool {
	if o != nil && o.DestinationUrl != nil {
		return true
	}

	return false
}

// SetDestinationUrl gets a reference to the given string and assigns it to the DestinationUrl field.
func (o *Threat1) SetDestinationUrl(v string) {
	o.DestinationUrl = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *Threat1) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *Threat1) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *Threat1) SetProtocol(v string) {
	o.Protocol = &v
}

// GetByteCount returns the ByteCount field value if set, zero value otherwise.
func (o *Threat1) GetByteCount() string {
	if o == nil || o.ByteCount == nil {
		var ret string
		return ret
	}
	return *o.ByteCount
}

// GetByteCountOk returns a tuple with the ByteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetByteCountOk() (*string, bool) {
	if o == nil || o.ByteCount == nil {
		return nil, false
	}
	return o.ByteCount, true
}

// HasByteCount returns a boolean if a field has been set.
func (o *Threat1) HasByteCount() bool {
	if o != nil && o.ByteCount != nil {
		return true
	}

	return false
}

// SetByteCount gets a reference to the given string and assigns it to the ByteCount field.
func (o *Threat1) SetByteCount(v string) {
	o.ByteCount = &v
}

// GetPacketCount returns the PacketCount field value if set, zero value otherwise.
func (o *Threat1) GetPacketCount() string {
	if o == nil || o.PacketCount == nil {
		var ret string
		return ret
	}
	return *o.PacketCount
}

// GetPacketCountOk returns a tuple with the PacketCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetPacketCountOk() (*string, bool) {
	if o == nil || o.PacketCount == nil {
		return nil, false
	}
	return o.PacketCount, true
}

// HasPacketCount returns a boolean if a field has been set.
func (o *Threat1) HasPacketCount() bool {
	if o != nil && o.PacketCount != nil {
		return true
	}

	return false
}

// SetPacketCount gets a reference to the given string and assigns it to the PacketCount field.
func (o *Threat1) SetPacketCount(v string) {
	o.PacketCount = &v
}

// GetDate returns the Date field value
func (o *Threat1) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *Threat1) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *Threat1) SetDate(v string) {
	o.Date = v
}

// GetTime returns the Time field value
func (o *Threat1) GetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *Threat1) GetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *Threat1) SetTime(v string) {
	o.Time = v
}

// GetTimeZone returns the TimeZone field value
func (o *Threat1) GetTimeZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value
// and a boolean to check if the value has been set.
func (o *Threat1) GetTimeZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeZone, true
}

// SetTimeZone sets field value
func (o *Threat1) SetTimeZone(v string) {
	o.TimeZone = v
}

// GetSample returns the Sample field value if set, zero value otherwise.
func (o *Threat1) GetSample() string {
	if o == nil || o.Sample == nil {
		var ret string
		return ret
	}
	return *o.Sample
}

// GetSampleOk returns a tuple with the Sample field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetSampleOk() (*string, bool) {
	if o == nil || o.Sample == nil {
		return nil, false
	}
	return o.Sample, true
}

// HasSample returns a boolean if a field has been set.
func (o *Threat1) HasSample() bool {
	if o != nil && o.Sample != nil {
		return true
	}

	return false
}

// SetSample gets a reference to the given string and assigns it to the Sample field.
func (o *Threat1) SetSample(v string) {
	o.Sample = &v
}

// GetSampleType returns the SampleType field value if set, zero value otherwise.
func (o *Threat1) GetSampleType() string {
	if o == nil || o.SampleType == nil {
		var ret string
		return ret
	}
	return *o.SampleType
}

// GetSampleTypeOk returns a tuple with the SampleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat1) GetSampleTypeOk() (*string, bool) {
	if o == nil || o.SampleType == nil {
		return nil, false
	}
	return o.SampleType, true
}

// HasSampleType returns a boolean if a field has been set.
func (o *Threat1) HasSampleType() bool {
	if o != nil && o.SampleType != nil {
		return true
	}

	return false
}

// SetSampleType gets a reference to the given string and assigns it to the SampleType field.
func (o *Threat1) SetSampleType(v string) {
	o.SampleType = &v
}

func (o Threat1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["threatType"] = o.ThreatType
	}
	if true {
		toSerialize["threatSubType"] = o.ThreatSubType
	}
	if o.SourceIp != nil {
		toSerialize["sourceIp"] = o.SourceIp
	}
	if o.DestinationIp != nil {
		toSerialize["destinationIp"] = o.DestinationIp
	}
	if o.SourcePort != nil {
		toSerialize["sourcePort"] = o.SourcePort
	}
	if o.DestinationPort != nil {
		toSerialize["destinationPort"] = o.DestinationPort
	}
	if o.SourceUrl != nil {
		toSerialize["sourceUrl"] = o.SourceUrl
	}
	if o.DestinationUrl != nil {
		toSerialize["destinationUrl"] = o.DestinationUrl
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.ByteCount != nil {
		toSerialize["byteCount"] = o.ByteCount
	}
	if o.PacketCount != nil {
		toSerialize["packetCount"] = o.PacketCount
	}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["time"] = o.Time
	}
	if true {
		toSerialize["timeZone"] = o.TimeZone
	}
	if o.Sample != nil {
		toSerialize["sample"] = o.Sample
	}
	if o.SampleType != nil {
		toSerialize["sampleType"] = o.SampleType
	}
	return json.Marshal(toSerialize)
}

type NullableThreat1 struct {
	value *Threat1
	isSet bool
}

func (v NullableThreat1) Get() *Threat1 {
	return v.value
}

func (v *NullableThreat1) Set(val *Threat1) {
	v.value = val
	v.isSet = true
}

func (v NullableThreat1) IsSet() bool {
	return v.isSet
}

func (v *NullableThreat1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreat1(val *Threat1) *NullableThreat1 {
	return &NullableThreat1{value: val, isSet: true}
}

func (v NullableThreat1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreat1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
