/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CvrfdocDocumentTracking struct for CvrfdocDocumentTracking
type CvrfdocDocumentTracking struct {
	Identification     *CvrfdocDocumentTrackingIdentification `json:"Identification,omitempty"`
	Status             *int32                                 `json:"Status,omitempty"`
	Version            *string                                `json:"Version,omitempty"`
	RevisionHistory    []CvrfdocDocumentTrackingRevision      `json:"RevisionHistory,omitempty"`
	InitialReleaseDate *time.Time                             `json:"InitialReleaseDate,omitempty"`
	CurrentReleaseDate *time.Time                             `json:"CurrentReleaseDate,omitempty"`
	Generator          *CvrfdocDocumentTrackingGenerator      `json:"Generator,omitempty"`
}

// NewCvrfdocDocumentTracking instantiates a new CvrfdocDocumentTracking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCvrfdocDocumentTracking() *CvrfdocDocumentTracking {
	this := CvrfdocDocumentTracking{}
	return &this
}

// NewCvrfdocDocumentTrackingWithDefaults instantiates a new CvrfdocDocumentTracking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCvrfdocDocumentTrackingWithDefaults() *CvrfdocDocumentTracking {
	this := CvrfdocDocumentTracking{}
	return &this
}

// GetIdentification returns the Identification field value if set, zero value otherwise.
func (o *CvrfdocDocumentTracking) GetIdentification() CvrfdocDocumentTrackingIdentification {
	if o == nil || isNil(o.Identification) {
		var ret CvrfdocDocumentTrackingIdentification
		return ret
	}
	return *o.Identification
}

// GetIdentificationOk returns a tuple with the Identification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTracking) GetIdentificationOk() (*CvrfdocDocumentTrackingIdentification, bool) {
	if o == nil || isNil(o.Identification) {
		return nil, false
	}
	return o.Identification, true
}

// HasIdentification returns a boolean if a field has been set.
func (o *CvrfdocDocumentTracking) HasIdentification() bool {
	if o != nil && !isNil(o.Identification) {
		return true
	}

	return false
}

// SetIdentification gets a reference to the given CvrfdocDocumentTrackingIdentification and assigns it to the Identification field.
func (o *CvrfdocDocumentTracking) SetIdentification(v CvrfdocDocumentTrackingIdentification) {
	o.Identification = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CvrfdocDocumentTracking) GetStatus() int32 {
	if o == nil || isNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTracking) GetStatusOk() (*int32, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CvrfdocDocumentTracking) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *CvrfdocDocumentTracking) SetStatus(v int32) {
	o.Status = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CvrfdocDocumentTracking) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTracking) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CvrfdocDocumentTracking) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CvrfdocDocumentTracking) SetVersion(v string) {
	o.Version = &v
}

// GetRevisionHistory returns the RevisionHistory field value if set, zero value otherwise.
func (o *CvrfdocDocumentTracking) GetRevisionHistory() []CvrfdocDocumentTrackingRevision {
	if o == nil || isNil(o.RevisionHistory) {
		var ret []CvrfdocDocumentTrackingRevision
		return ret
	}
	return o.RevisionHistory
}

// GetRevisionHistoryOk returns a tuple with the RevisionHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTracking) GetRevisionHistoryOk() ([]CvrfdocDocumentTrackingRevision, bool) {
	if o == nil || isNil(o.RevisionHistory) {
		return nil, false
	}
	return o.RevisionHistory, true
}

// HasRevisionHistory returns a boolean if a field has been set.
func (o *CvrfdocDocumentTracking) HasRevisionHistory() bool {
	if o != nil && !isNil(o.RevisionHistory) {
		return true
	}

	return false
}

// SetRevisionHistory gets a reference to the given []CvrfdocDocumentTrackingRevision and assigns it to the RevisionHistory field.
func (o *CvrfdocDocumentTracking) SetRevisionHistory(v []CvrfdocDocumentTrackingRevision) {
	o.RevisionHistory = v
}

// GetInitialReleaseDate returns the InitialReleaseDate field value if set, zero value otherwise.
func (o *CvrfdocDocumentTracking) GetInitialReleaseDate() time.Time {
	if o == nil || isNil(o.InitialReleaseDate) {
		var ret time.Time
		return ret
	}
	return *o.InitialReleaseDate
}

// GetInitialReleaseDateOk returns a tuple with the InitialReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTracking) GetInitialReleaseDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.InitialReleaseDate) {
		return nil, false
	}
	return o.InitialReleaseDate, true
}

// HasInitialReleaseDate returns a boolean if a field has been set.
func (o *CvrfdocDocumentTracking) HasInitialReleaseDate() bool {
	if o != nil && !isNil(o.InitialReleaseDate) {
		return true
	}

	return false
}

// SetInitialReleaseDate gets a reference to the given time.Time and assigns it to the InitialReleaseDate field.
func (o *CvrfdocDocumentTracking) SetInitialReleaseDate(v time.Time) {
	o.InitialReleaseDate = &v
}

// GetCurrentReleaseDate returns the CurrentReleaseDate field value if set, zero value otherwise.
func (o *CvrfdocDocumentTracking) GetCurrentReleaseDate() time.Time {
	if o == nil || isNil(o.CurrentReleaseDate) {
		var ret time.Time
		return ret
	}
	return *o.CurrentReleaseDate
}

// GetCurrentReleaseDateOk returns a tuple with the CurrentReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTracking) GetCurrentReleaseDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.CurrentReleaseDate) {
		return nil, false
	}
	return o.CurrentReleaseDate, true
}

// HasCurrentReleaseDate returns a boolean if a field has been set.
func (o *CvrfdocDocumentTracking) HasCurrentReleaseDate() bool {
	if o != nil && !isNil(o.CurrentReleaseDate) {
		return true
	}

	return false
}

// SetCurrentReleaseDate gets a reference to the given time.Time and assigns it to the CurrentReleaseDate field.
func (o *CvrfdocDocumentTracking) SetCurrentReleaseDate(v time.Time) {
	o.CurrentReleaseDate = &v
}

// GetGenerator returns the Generator field value if set, zero value otherwise.
func (o *CvrfdocDocumentTracking) GetGenerator() CvrfdocDocumentTrackingGenerator {
	if o == nil || isNil(o.Generator) {
		var ret CvrfdocDocumentTrackingGenerator
		return ret
	}
	return *o.Generator
}

// GetGeneratorOk returns a tuple with the Generator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTracking) GetGeneratorOk() (*CvrfdocDocumentTrackingGenerator, bool) {
	if o == nil || isNil(o.Generator) {
		return nil, false
	}
	return o.Generator, true
}

// HasGenerator returns a boolean if a field has been set.
func (o *CvrfdocDocumentTracking) HasGenerator() bool {
	if o != nil && !isNil(o.Generator) {
		return true
	}

	return false
}

// SetGenerator gets a reference to the given CvrfdocDocumentTrackingGenerator and assigns it to the Generator field.
func (o *CvrfdocDocumentTracking) SetGenerator(v CvrfdocDocumentTrackingGenerator) {
	o.Generator = &v
}

func (o CvrfdocDocumentTracking) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Identification) {
		toSerialize["Identification"] = o.Identification
	}
	if !isNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !isNil(o.Version) {
		toSerialize["Version"] = o.Version
	}
	if !isNil(o.RevisionHistory) {
		toSerialize["RevisionHistory"] = o.RevisionHistory
	}
	if !isNil(o.InitialReleaseDate) {
		toSerialize["InitialReleaseDate"] = o.InitialReleaseDate
	}
	if !isNil(o.CurrentReleaseDate) {
		toSerialize["CurrentReleaseDate"] = o.CurrentReleaseDate
	}
	if !isNil(o.Generator) {
		toSerialize["Generator"] = o.Generator
	}
	return json.Marshal(toSerialize)
}

type NullableCvrfdocDocumentTracking struct {
	value *CvrfdocDocumentTracking
	isSet bool
}

func (v NullableCvrfdocDocumentTracking) Get() *CvrfdocDocumentTracking {
	return v.value
}

func (v *NullableCvrfdocDocumentTracking) Set(val *CvrfdocDocumentTracking) {
	v.value = val
	v.isSet = true
}

func (v NullableCvrfdocDocumentTracking) IsSet() bool {
	return v.isSet
}

func (v *NullableCvrfdocDocumentTracking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCvrfdocDocumentTracking(val *CvrfdocDocumentTracking) *NullableCvrfdocDocumentTracking {
	return &NullableCvrfdocDocumentTracking{value: val, isSet: true}
}

func (v NullableCvrfdocDocumentTracking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCvrfdocDocumentTracking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
