/*
 * MSRC Public API
 *
 * This RESTful API can be used to engage the Microsoft Security Response Center (MSRC) in the following ways:    - Get security update summaries and details using the [Common Vulnerability Reporting Framework](https://www.icasi.org/cvrf) (CVRF).    - Report suspected cyberattacks or abuse originating from Microsoft Online Services.    - Notify Microsoft of any planned penetration tests against your Azure assets.    **Sample client code** is available on the Microsoft Security [Updates](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API) and [Engage](https://github.com/Microsoft/MSRC-Microsoft-Engage-API)   Github repositories.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProductTreeGroup struct for ProductTreeGroup
type ProductTreeGroup struct {
	Description *ProductTreeGroupDescription `json:"Description,omitempty"`
	ProductID   *[]string                    `json:"ProductID,omitempty"`
	GroupID     *string                      `json:"GroupID,omitempty"`
}

// NewProductTreeGroup instantiates a new ProductTreeGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductTreeGroup() *ProductTreeGroup {
	this := ProductTreeGroup{}
	return &this
}

// NewProductTreeGroupWithDefaults instantiates a new ProductTreeGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductTreeGroupWithDefaults() *ProductTreeGroup {
	this := ProductTreeGroup{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProductTreeGroup) GetDescription() ProductTreeGroupDescription {
	if o == nil || o.Description == nil {
		var ret ProductTreeGroupDescription
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTreeGroup) GetDescriptionOk() (*ProductTreeGroupDescription, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProductTreeGroup) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given ProductTreeGroupDescription and assigns it to the Description field.
func (o *ProductTreeGroup) SetDescription(v ProductTreeGroupDescription) {
	o.Description = &v
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *ProductTreeGroup) GetProductID() []string {
	if o == nil || o.ProductID == nil {
		var ret []string
		return ret
	}
	return *o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTreeGroup) GetProductIDOk() (*[]string, bool) {
	if o == nil || o.ProductID == nil {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *ProductTreeGroup) HasProductID() bool {
	if o != nil && o.ProductID != nil {
		return true
	}

	return false
}

// SetProductID gets a reference to the given []string and assigns it to the ProductID field.
func (o *ProductTreeGroup) SetProductID(v []string) {
	o.ProductID = &v
}

// GetGroupID returns the GroupID field value if set, zero value otherwise.
func (o *ProductTreeGroup) GetGroupID() string {
	if o == nil || o.GroupID == nil {
		var ret string
		return ret
	}
	return *o.GroupID
}

// GetGroupIDOk returns a tuple with the GroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTreeGroup) GetGroupIDOk() (*string, bool) {
	if o == nil || o.GroupID == nil {
		return nil, false
	}
	return o.GroupID, true
}

// HasGroupID returns a boolean if a field has been set.
func (o *ProductTreeGroup) HasGroupID() bool {
	if o != nil && o.GroupID != nil {
		return true
	}

	return false
}

// SetGroupID gets a reference to the given string and assigns it to the GroupID field.
func (o *ProductTreeGroup) SetGroupID(v string) {
	o.GroupID = &v
}

func (o ProductTreeGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.ProductID != nil {
		toSerialize["ProductID"] = o.ProductID
	}
	if o.GroupID != nil {
		toSerialize["GroupID"] = o.GroupID
	}
	return json.Marshal(toSerialize)
}

type NullableProductTreeGroup struct {
	value *ProductTreeGroup
	isSet bool
}

func (v NullableProductTreeGroup) Get() *ProductTreeGroup {
	return v.value
}

func (v *NullableProductTreeGroup) Set(val *ProductTreeGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableProductTreeGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableProductTreeGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductTreeGroup(val *ProductTreeGroup) *NullableProductTreeGroup {
	return &NullableProductTreeGroup{value: val, isSet: true}
}

func (v NullableProductTreeGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductTreeGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
