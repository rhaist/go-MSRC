/*
 * MSRC Public API
 *
 * This RESTful API can be used to engage the Microsoft Security Response Center (MSRC) in the following ways:    - Get security update summaries and details using the [Common Vulnerability Reporting Framework](https://www.icasi.org/cvrf) (CVRF).    - Report suspected cyberattacks or abuse originating from Microsoft Online Services.    - Notify Microsoft of any planned penetration tests against your Azure assets.    **Sample client code** is available on the Microsoft Security [Updates](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API) and [Engage](https://github.com/Microsoft/MSRC-Microsoft-Engage-API)   Github repositories.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SubscriptionInfo information about an Azure subscription
type SubscriptionInfo struct {
	// Azure subscription ID
	SubscriptionId string `json:"subscriptionId"`
}

// NewSubscriptionInfo instantiates a new SubscriptionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionInfo(subscriptionId string) *SubscriptionInfo {
	this := SubscriptionInfo{}
	this.SubscriptionId = subscriptionId
	return &this
}

// NewSubscriptionInfoWithDefaults instantiates a new SubscriptionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionInfoWithDefaults() *SubscriptionInfo {
	this := SubscriptionInfo{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *SubscriptionInfo) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionInfo) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *SubscriptionInfo) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

func (o SubscriptionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionInfo struct {
	value *SubscriptionInfo
	isSet bool
}

func (v NullableSubscriptionInfo) Get() *SubscriptionInfo {
	return v.value
}

func (v *NullableSubscriptionInfo) Set(val *SubscriptionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionInfo(val *SubscriptionInfo) *NullableSubscriptionInfo {
	return &NullableSubscriptionInfo{value: val, isSet: true}
}

func (v NullableSubscriptionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
