/*
MSRC CVRF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HttpResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpResponse{}

// HttpResponse struct for HttpResponse
type HttpResponse struct {
	HttpContext   *HttpContext           `json:"httpContext,omitempty"`
	StatusCode    *int32                 `json:"statusCode,omitempty"`
	Headers       map[string][]string    `json:"headers,omitempty"`
	Body          *Stream                `json:"body,omitempty"`
	BodyWriter    *PipeWriter            `json:"bodyWriter,omitempty"`
	ContentLength NullableInt64          `json:"contentLength,omitempty"`
	ContentType   NullableString         `json:"contentType,omitempty"`
	Cookies       map[string]interface{} `json:"cookies,omitempty"`
	HasStarted    *bool                  `json:"hasStarted,omitempty"`
}

// NewHttpResponse instantiates a new HttpResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpResponse() *HttpResponse {
	this := HttpResponse{}
	return &this
}

// NewHttpResponseWithDefaults instantiates a new HttpResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpResponseWithDefaults() *HttpResponse {
	this := HttpResponse{}
	return &this
}

// GetHttpContext returns the HttpContext field value if set, zero value otherwise.
func (o *HttpResponse) GetHttpContext() HttpContext {
	if o == nil || IsNil(o.HttpContext) {
		var ret HttpContext
		return ret
	}
	return *o.HttpContext
}

// GetHttpContextOk returns a tuple with the HttpContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponse) GetHttpContextOk() (*HttpContext, bool) {
	if o == nil || IsNil(o.HttpContext) {
		return nil, false
	}
	return o.HttpContext, true
}

// HasHttpContext returns a boolean if a field has been set.
func (o *HttpResponse) HasHttpContext() bool {
	if o != nil && !IsNil(o.HttpContext) {
		return true
	}

	return false
}

// SetHttpContext gets a reference to the given HttpContext and assigns it to the HttpContext field.
func (o *HttpResponse) SetHttpContext(v HttpContext) {
	o.HttpContext = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *HttpResponse) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponse) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *HttpResponse) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *HttpResponse) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HttpResponse) GetHeaders() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HttpResponse) GetHeadersOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return &o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *HttpResponse) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string][]string and assigns it to the Headers field.
func (o *HttpResponse) SetHeaders(v map[string][]string) {
	o.Headers = v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *HttpResponse) GetBody() Stream {
	if o == nil || IsNil(o.Body) {
		var ret Stream
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponse) GetBodyOk() (*Stream, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *HttpResponse) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given Stream and assigns it to the Body field.
func (o *HttpResponse) SetBody(v Stream) {
	o.Body = &v
}

// GetBodyWriter returns the BodyWriter field value if set, zero value otherwise.
func (o *HttpResponse) GetBodyWriter() PipeWriter {
	if o == nil || IsNil(o.BodyWriter) {
		var ret PipeWriter
		return ret
	}
	return *o.BodyWriter
}

// GetBodyWriterOk returns a tuple with the BodyWriter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponse) GetBodyWriterOk() (*PipeWriter, bool) {
	if o == nil || IsNil(o.BodyWriter) {
		return nil, false
	}
	return o.BodyWriter, true
}

// HasBodyWriter returns a boolean if a field has been set.
func (o *HttpResponse) HasBodyWriter() bool {
	if o != nil && !IsNil(o.BodyWriter) {
		return true
	}

	return false
}

// SetBodyWriter gets a reference to the given PipeWriter and assigns it to the BodyWriter field.
func (o *HttpResponse) SetBodyWriter(v PipeWriter) {
	o.BodyWriter = &v
}

// GetContentLength returns the ContentLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HttpResponse) GetContentLength() int64 {
	if o == nil || IsNil(o.ContentLength.Get()) {
		var ret int64
		return ret
	}
	return *o.ContentLength.Get()
}

// GetContentLengthOk returns a tuple with the ContentLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HttpResponse) GetContentLengthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentLength.Get(), o.ContentLength.IsSet()
}

// HasContentLength returns a boolean if a field has been set.
func (o *HttpResponse) HasContentLength() bool {
	if o != nil && o.ContentLength.IsSet() {
		return true
	}

	return false
}

// SetContentLength gets a reference to the given NullableInt64 and assigns it to the ContentLength field.
func (o *HttpResponse) SetContentLength(v int64) {
	o.ContentLength.Set(&v)
}

// SetContentLengthNil sets the value for ContentLength to be an explicit nil
func (o *HttpResponse) SetContentLengthNil() {
	o.ContentLength.Set(nil)
}

// UnsetContentLength ensures that no value is present for ContentLength, not even an explicit nil
func (o *HttpResponse) UnsetContentLength() {
	o.ContentLength.Unset()
}

// GetContentType returns the ContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HttpResponse) GetContentType() string {
	if o == nil || IsNil(o.ContentType.Get()) {
		var ret string
		return ret
	}
	return *o.ContentType.Get()
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HttpResponse) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentType.Get(), o.ContentType.IsSet()
}

// HasContentType returns a boolean if a field has been set.
func (o *HttpResponse) HasContentType() bool {
	if o != nil && o.ContentType.IsSet() {
		return true
	}

	return false
}

// SetContentType gets a reference to the given NullableString and assigns it to the ContentType field.
func (o *HttpResponse) SetContentType(v string) {
	o.ContentType.Set(&v)
}

// SetContentTypeNil sets the value for ContentType to be an explicit nil
func (o *HttpResponse) SetContentTypeNil() {
	o.ContentType.Set(nil)
}

// UnsetContentType ensures that no value is present for ContentType, not even an explicit nil
func (o *HttpResponse) UnsetContentType() {
	o.ContentType.Unset()
}

// GetCookies returns the Cookies field value if set, zero value otherwise.
func (o *HttpResponse) GetCookies() map[string]interface{} {
	if o == nil || IsNil(o.Cookies) {
		var ret map[string]interface{}
		return ret
	}
	return o.Cookies
}

// GetCookiesOk returns a tuple with the Cookies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponse) GetCookiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Cookies) {
		return map[string]interface{}{}, false
	}
	return o.Cookies, true
}

// HasCookies returns a boolean if a field has been set.
func (o *HttpResponse) HasCookies() bool {
	if o != nil && !IsNil(o.Cookies) {
		return true
	}

	return false
}

// SetCookies gets a reference to the given map[string]interface{} and assigns it to the Cookies field.
func (o *HttpResponse) SetCookies(v map[string]interface{}) {
	o.Cookies = v
}

// GetHasStarted returns the HasStarted field value if set, zero value otherwise.
func (o *HttpResponse) GetHasStarted() bool {
	if o == nil || IsNil(o.HasStarted) {
		var ret bool
		return ret
	}
	return *o.HasStarted
}

// GetHasStartedOk returns a tuple with the HasStarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpResponse) GetHasStartedOk() (*bool, bool) {
	if o == nil || IsNil(o.HasStarted) {
		return nil, false
	}
	return o.HasStarted, true
}

// HasHasStarted returns a boolean if a field has been set.
func (o *HttpResponse) HasHasStarted() bool {
	if o != nil && !IsNil(o.HasStarted) {
		return true
	}

	return false
}

// SetHasStarted gets a reference to the given bool and assigns it to the HasStarted field.
func (o *HttpResponse) SetHasStarted(v bool) {
	o.HasStarted = &v
}

func (o HttpResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HttpContext) {
		toSerialize["httpContext"] = o.HttpContext
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.BodyWriter) {
		toSerialize["bodyWriter"] = o.BodyWriter
	}
	if o.ContentLength.IsSet() {
		toSerialize["contentLength"] = o.ContentLength.Get()
	}
	if o.ContentType.IsSet() {
		toSerialize["contentType"] = o.ContentType.Get()
	}
	if !IsNil(o.Cookies) {
		toSerialize["cookies"] = o.Cookies
	}
	if !IsNil(o.HasStarted) {
		toSerialize["hasStarted"] = o.HasStarted
	}
	return toSerialize, nil
}

type NullableHttpResponse struct {
	value *HttpResponse
	isSet bool
}

func (v NullableHttpResponse) Get() *HttpResponse {
	return v.value
}

func (v *NullableHttpResponse) Set(val *HttpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpResponse(val *HttpResponse) *NullableHttpResponse {
	return &NullableHttpResponse{value: val, isSet: true}
}

func (v NullableHttpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
