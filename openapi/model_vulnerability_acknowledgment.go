/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VulnerabilityAcknowledgment struct for VulnerabilityAcknowledgment
type VulnerabilityAcknowledgment struct {
	Name         []VulnerabilityAcknowledgmentName         `json:"Name,omitempty"`
	Organization []VulnerabilityAcknowledgmentOrganization `json:"Organization,omitempty"`
	Description  *VulnerabilityAcknowledgmentDescription   `json:"Description,omitempty"`
	URL          []string                                  `json:"URL,omitempty"`
}

// NewVulnerabilityAcknowledgment instantiates a new VulnerabilityAcknowledgment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityAcknowledgment() *VulnerabilityAcknowledgment {
	this := VulnerabilityAcknowledgment{}
	return &this
}

// NewVulnerabilityAcknowledgmentWithDefaults instantiates a new VulnerabilityAcknowledgment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityAcknowledgmentWithDefaults() *VulnerabilityAcknowledgment {
	this := VulnerabilityAcknowledgment{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VulnerabilityAcknowledgment) GetName() []VulnerabilityAcknowledgmentName {
	if o == nil || isNil(o.Name) {
		var ret []VulnerabilityAcknowledgmentName
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityAcknowledgment) GetNameOk() ([]VulnerabilityAcknowledgmentName, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VulnerabilityAcknowledgment) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given []VulnerabilityAcknowledgmentName and assigns it to the Name field.
func (o *VulnerabilityAcknowledgment) SetName(v []VulnerabilityAcknowledgmentName) {
	o.Name = v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *VulnerabilityAcknowledgment) GetOrganization() []VulnerabilityAcknowledgmentOrganization {
	if o == nil || isNil(o.Organization) {
		var ret []VulnerabilityAcknowledgmentOrganization
		return ret
	}
	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityAcknowledgment) GetOrganizationOk() ([]VulnerabilityAcknowledgmentOrganization, bool) {
	if o == nil || isNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *VulnerabilityAcknowledgment) HasOrganization() bool {
	if o != nil && !isNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given []VulnerabilityAcknowledgmentOrganization and assigns it to the Organization field.
func (o *VulnerabilityAcknowledgment) SetOrganization(v []VulnerabilityAcknowledgmentOrganization) {
	o.Organization = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VulnerabilityAcknowledgment) GetDescription() VulnerabilityAcknowledgmentDescription {
	if o == nil || isNil(o.Description) {
		var ret VulnerabilityAcknowledgmentDescription
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityAcknowledgment) GetDescriptionOk() (*VulnerabilityAcknowledgmentDescription, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VulnerabilityAcknowledgment) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given VulnerabilityAcknowledgmentDescription and assigns it to the Description field.
func (o *VulnerabilityAcknowledgment) SetDescription(v VulnerabilityAcknowledgmentDescription) {
	o.Description = &v
}

// GetURL returns the URL field value if set, zero value otherwise.
func (o *VulnerabilityAcknowledgment) GetURL() []string {
	if o == nil || isNil(o.URL) {
		var ret []string
		return ret
	}
	return o.URL
}

// GetURLOk returns a tuple with the URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityAcknowledgment) GetURLOk() ([]string, bool) {
	if o == nil || isNil(o.URL) {
		return nil, false
	}
	return o.URL, true
}

// HasURL returns a boolean if a field has been set.
func (o *VulnerabilityAcknowledgment) HasURL() bool {
	if o != nil && !isNil(o.URL) {
		return true
	}

	return false
}

// SetURL gets a reference to the given []string and assigns it to the URL field.
func (o *VulnerabilityAcknowledgment) SetURL(v []string) {
	o.URL = v
}

func (o VulnerabilityAcknowledgment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !isNil(o.Organization) {
		toSerialize["Organization"] = o.Organization
	}
	if !isNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !isNil(o.URL) {
		toSerialize["URL"] = o.URL
	}
	return json.Marshal(toSerialize)
}

type NullableVulnerabilityAcknowledgment struct {
	value *VulnerabilityAcknowledgment
	isSet bool
}

func (v NullableVulnerabilityAcknowledgment) Get() *VulnerabilityAcknowledgment {
	return v.value
}

func (v *NullableVulnerabilityAcknowledgment) Set(val *VulnerabilityAcknowledgment) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityAcknowledgment) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityAcknowledgment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityAcknowledgment(val *VulnerabilityAcknowledgment) *NullableVulnerabilityAcknowledgment {
	return &NullableVulnerabilityAcknowledgment{value: val, isSet: true}
}

func (v NullableVulnerabilityAcknowledgment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityAcknowledgment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
