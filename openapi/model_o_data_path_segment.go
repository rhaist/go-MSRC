/*
MSRC CVRF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ODataPathSegment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ODataPathSegment{}

// ODataPathSegment struct for ODataPathSegment
type ODataPathSegment struct {
	EdmType    *IEdmType      `json:"edmType,omitempty"`
	Identifier NullableString `json:"identifier,omitempty"`
}

// NewODataPathSegment instantiates a new ODataPathSegment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewODataPathSegment() *ODataPathSegment {
	this := ODataPathSegment{}
	return &this
}

// NewODataPathSegmentWithDefaults instantiates a new ODataPathSegment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewODataPathSegmentWithDefaults() *ODataPathSegment {
	this := ODataPathSegment{}
	return &this
}

// GetEdmType returns the EdmType field value if set, zero value otherwise.
func (o *ODataPathSegment) GetEdmType() IEdmType {
	if o == nil || IsNil(o.EdmType) {
		var ret IEdmType
		return ret
	}
	return *o.EdmType
}

// GetEdmTypeOk returns a tuple with the EdmType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ODataPathSegment) GetEdmTypeOk() (*IEdmType, bool) {
	if o == nil || IsNil(o.EdmType) {
		return nil, false
	}
	return o.EdmType, true
}

// HasEdmType returns a boolean if a field has been set.
func (o *ODataPathSegment) HasEdmType() bool {
	if o != nil && !IsNil(o.EdmType) {
		return true
	}

	return false
}

// SetEdmType gets a reference to the given IEdmType and assigns it to the EdmType field.
func (o *ODataPathSegment) SetEdmType(v IEdmType) {
	o.EdmType = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ODataPathSegment) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier.Get()) {
		var ret string
		return ret
	}
	return *o.Identifier.Get()
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ODataPathSegment) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Identifier.Get(), o.Identifier.IsSet()
}

// HasIdentifier returns a boolean if a field has been set.
func (o *ODataPathSegment) HasIdentifier() bool {
	if o != nil && o.Identifier.IsSet() {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given NullableString and assigns it to the Identifier field.
func (o *ODataPathSegment) SetIdentifier(v string) {
	o.Identifier.Set(&v)
}

// SetIdentifierNil sets the value for Identifier to be an explicit nil
func (o *ODataPathSegment) SetIdentifierNil() {
	o.Identifier.Set(nil)
}

// UnsetIdentifier ensures that no value is present for Identifier, not even an explicit nil
func (o *ODataPathSegment) UnsetIdentifier() {
	o.Identifier.Unset()
}

func (o ODataPathSegment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ODataPathSegment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EdmType) {
		toSerialize["edmType"] = o.EdmType
	}
	if o.Identifier.IsSet() {
		toSerialize["identifier"] = o.Identifier.Get()
	}
	return toSerialize, nil
}

type NullableODataPathSegment struct {
	value *ODataPathSegment
	isSet bool
}

func (v NullableODataPathSegment) Get() *ODataPathSegment {
	return v.value
}

func (v *NullableODataPathSegment) Set(val *ODataPathSegment) {
	v.value = val
	v.isSet = true
}

func (v NullableODataPathSegment) IsSet() bool {
	return v.isSet
}

func (v *NullableODataPathSegment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableODataPathSegment(val *ODataPathSegment) *NullableODataPathSegment {
	return &NullableODataPathSegment{value: val, isSet: true}
}

func (v NullableODataPathSegment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableODataPathSegment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
