/*
MSRC CVRF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IEdmStructuralProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IEdmStructuralProperty{}

// IEdmStructuralProperty struct for IEdmStructuralProperty
type IEdmStructuralProperty struct {
	DefaultValueString NullableString      `json:"defaultValueString,omitempty"`
	PropertyKind       *EdmPropertyKind    `json:"propertyKind,omitempty"`
	Type               *IEdmTypeReference  `json:"type,omitempty"`
	DeclaringType      *IEdmStructuredType `json:"declaringType,omitempty"`
	Name               NullableString      `json:"name,omitempty"`
}

// NewIEdmStructuralProperty instantiates a new IEdmStructuralProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIEdmStructuralProperty() *IEdmStructuralProperty {
	this := IEdmStructuralProperty{}
	return &this
}

// NewIEdmStructuralPropertyWithDefaults instantiates a new IEdmStructuralProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIEdmStructuralPropertyWithDefaults() *IEdmStructuralProperty {
	this := IEdmStructuralProperty{}
	return &this
}

// GetDefaultValueString returns the DefaultValueString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IEdmStructuralProperty) GetDefaultValueString() string {
	if o == nil || IsNil(o.DefaultValueString.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultValueString.Get()
}

// GetDefaultValueStringOk returns a tuple with the DefaultValueString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IEdmStructuralProperty) GetDefaultValueStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultValueString.Get(), o.DefaultValueString.IsSet()
}

// HasDefaultValueString returns a boolean if a field has been set.
func (o *IEdmStructuralProperty) HasDefaultValueString() bool {
	if o != nil && o.DefaultValueString.IsSet() {
		return true
	}

	return false
}

// SetDefaultValueString gets a reference to the given NullableString and assigns it to the DefaultValueString field.
func (o *IEdmStructuralProperty) SetDefaultValueString(v string) {
	o.DefaultValueString.Set(&v)
}

// SetDefaultValueStringNil sets the value for DefaultValueString to be an explicit nil
func (o *IEdmStructuralProperty) SetDefaultValueStringNil() {
	o.DefaultValueString.Set(nil)
}

// UnsetDefaultValueString ensures that no value is present for DefaultValueString, not even an explicit nil
func (o *IEdmStructuralProperty) UnsetDefaultValueString() {
	o.DefaultValueString.Unset()
}

// GetPropertyKind returns the PropertyKind field value if set, zero value otherwise.
func (o *IEdmStructuralProperty) GetPropertyKind() EdmPropertyKind {
	if o == nil || IsNil(o.PropertyKind) {
		var ret EdmPropertyKind
		return ret
	}
	return *o.PropertyKind
}

// GetPropertyKindOk returns a tuple with the PropertyKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IEdmStructuralProperty) GetPropertyKindOk() (*EdmPropertyKind, bool) {
	if o == nil || IsNil(o.PropertyKind) {
		return nil, false
	}
	return o.PropertyKind, true
}

// HasPropertyKind returns a boolean if a field has been set.
func (o *IEdmStructuralProperty) HasPropertyKind() bool {
	if o != nil && !IsNil(o.PropertyKind) {
		return true
	}

	return false
}

// SetPropertyKind gets a reference to the given EdmPropertyKind and assigns it to the PropertyKind field.
func (o *IEdmStructuralProperty) SetPropertyKind(v EdmPropertyKind) {
	o.PropertyKind = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IEdmStructuralProperty) GetType() IEdmTypeReference {
	if o == nil || IsNil(o.Type) {
		var ret IEdmTypeReference
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IEdmStructuralProperty) GetTypeOk() (*IEdmTypeReference, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IEdmStructuralProperty) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given IEdmTypeReference and assigns it to the Type field.
func (o *IEdmStructuralProperty) SetType(v IEdmTypeReference) {
	o.Type = &v
}

// GetDeclaringType returns the DeclaringType field value if set, zero value otherwise.
func (o *IEdmStructuralProperty) GetDeclaringType() IEdmStructuredType {
	if o == nil || IsNil(o.DeclaringType) {
		var ret IEdmStructuredType
		return ret
	}
	return *o.DeclaringType
}

// GetDeclaringTypeOk returns a tuple with the DeclaringType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IEdmStructuralProperty) GetDeclaringTypeOk() (*IEdmStructuredType, bool) {
	if o == nil || IsNil(o.DeclaringType) {
		return nil, false
	}
	return o.DeclaringType, true
}

// HasDeclaringType returns a boolean if a field has been set.
func (o *IEdmStructuralProperty) HasDeclaringType() bool {
	if o != nil && !IsNil(o.DeclaringType) {
		return true
	}

	return false
}

// SetDeclaringType gets a reference to the given IEdmStructuredType and assigns it to the DeclaringType field.
func (o *IEdmStructuralProperty) SetDeclaringType(v IEdmStructuredType) {
	o.DeclaringType = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IEdmStructuralProperty) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IEdmStructuralProperty) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *IEdmStructuralProperty) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *IEdmStructuralProperty) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *IEdmStructuralProperty) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *IEdmStructuralProperty) UnsetName() {
	o.Name.Unset()
}

func (o IEdmStructuralProperty) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IEdmStructuralProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DefaultValueString.IsSet() {
		toSerialize["defaultValueString"] = o.DefaultValueString.Get()
	}
	if !IsNil(o.PropertyKind) {
		toSerialize["propertyKind"] = o.PropertyKind
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.DeclaringType) {
		toSerialize["declaringType"] = o.DeclaringType
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	return toSerialize, nil
}

type NullableIEdmStructuralProperty struct {
	value *IEdmStructuralProperty
	isSet bool
}

func (v NullableIEdmStructuralProperty) Get() *IEdmStructuralProperty {
	return v.value
}

func (v *NullableIEdmStructuralProperty) Set(val *IEdmStructuralProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableIEdmStructuralProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableIEdmStructuralProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIEdmStructuralProperty(val *IEdmStructuralProperty) *NullableIEdmStructuralProperty {
	return &NullableIEdmStructuralProperty{value: val, isSet: true}
}

func (v NullableIEdmStructuralProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIEdmStructuralProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
