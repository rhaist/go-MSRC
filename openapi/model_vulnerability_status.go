/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VulnerabilityStatus struct for VulnerabilityStatus
type VulnerabilityStatus struct {
	ProductID []string `json:"ProductID,omitempty"`
	Type      *int32   `json:"Type,omitempty"`
}

// NewVulnerabilityStatus instantiates a new VulnerabilityStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityStatus() *VulnerabilityStatus {
	this := VulnerabilityStatus{}
	return &this
}

// NewVulnerabilityStatusWithDefaults instantiates a new VulnerabilityStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityStatusWithDefaults() *VulnerabilityStatus {
	this := VulnerabilityStatus{}
	return &this
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *VulnerabilityStatus) GetProductID() []string {
	if o == nil || o.ProductID == nil {
		var ret []string
		return ret
	}
	return o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityStatus) GetProductIDOk() ([]string, bool) {
	if o == nil || o.ProductID == nil {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *VulnerabilityStatus) HasProductID() bool {
	if o != nil && o.ProductID != nil {
		return true
	}

	return false
}

// SetProductID gets a reference to the given []string and assigns it to the ProductID field.
func (o *VulnerabilityStatus) SetProductID(v []string) {
	o.ProductID = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VulnerabilityStatus) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityStatus) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VulnerabilityStatus) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *VulnerabilityStatus) SetType(v int32) {
	o.Type = &v
}

func (o VulnerabilityStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductID != nil {
		toSerialize["ProductID"] = o.ProductID
	}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableVulnerabilityStatus struct {
	value *VulnerabilityStatus
	isSet bool
}

func (v NullableVulnerabilityStatus) Get() *VulnerabilityStatus {
	return v.value
}

func (v *NullableVulnerabilityStatus) Set(val *VulnerabilityStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityStatus(val *VulnerabilityStatus) *NullableVulnerabilityStatus {
	return &NullableVulnerabilityStatus{value: val, isSet: true}
}

func (v NullableVulnerabilityStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
