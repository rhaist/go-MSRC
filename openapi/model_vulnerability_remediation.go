/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VulnerabilityRemediation struct for VulnerabilityRemediation
type VulnerabilityRemediation struct {
	Description     *VulnerabilityRemediationDescription     `json:"Description,omitempty"`
	Entitlement     []VulnerabilityRemediationEntitlement    `json:"Entitlement,omitempty"`
	URL             *string                                  `json:"URL,omitempty"`
	Supercedence    *string                                  `json:"Supercedence,omitempty"`
	ProductID       []string                                 `json:"ProductID,omitempty"`
	GroupID         []string                                 `json:"GroupID,omitempty"`
	Type            *int32                                   `json:"Type,omitempty"`
	Date            *time.Time                               `json:"Date,omitempty"`
	DateSpecified   *bool                                    `json:"DateSpecified,omitempty"`
	AffectedFiles   []AffectedFile                           `json:"AffectedFiles,omitempty"`
	RestartRequired *VulnerabilityRemediationRestartRequired `json:"RestartRequired,omitempty"`
	SubType         *string                                  `json:"SubType,omitempty"`
	FixedBuild      *string                                  `json:"FixedBuild,omitempty"`
}

// NewVulnerabilityRemediation instantiates a new VulnerabilityRemediation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityRemediation() *VulnerabilityRemediation {
	this := VulnerabilityRemediation{}
	return &this
}

// NewVulnerabilityRemediationWithDefaults instantiates a new VulnerabilityRemediation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityRemediationWithDefaults() *VulnerabilityRemediation {
	this := VulnerabilityRemediation{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetDescription() VulnerabilityRemediationDescription {
	if o == nil || o.Description == nil {
		var ret VulnerabilityRemediationDescription
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetDescriptionOk() (*VulnerabilityRemediationDescription, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given VulnerabilityRemediationDescription and assigns it to the Description field.
func (o *VulnerabilityRemediation) SetDescription(v VulnerabilityRemediationDescription) {
	o.Description = &v
}

// GetEntitlement returns the Entitlement field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetEntitlement() []VulnerabilityRemediationEntitlement {
	if o == nil || o.Entitlement == nil {
		var ret []VulnerabilityRemediationEntitlement
		return ret
	}
	return o.Entitlement
}

// GetEntitlementOk returns a tuple with the Entitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetEntitlementOk() ([]VulnerabilityRemediationEntitlement, bool) {
	if o == nil || o.Entitlement == nil {
		return nil, false
	}
	return o.Entitlement, true
}

// HasEntitlement returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasEntitlement() bool {
	if o != nil && o.Entitlement != nil {
		return true
	}

	return false
}

// SetEntitlement gets a reference to the given []VulnerabilityRemediationEntitlement and assigns it to the Entitlement field.
func (o *VulnerabilityRemediation) SetEntitlement(v []VulnerabilityRemediationEntitlement) {
	o.Entitlement = v
}

// GetURL returns the URL field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetURL() string {
	if o == nil || o.URL == nil {
		var ret string
		return ret
	}
	return *o.URL
}

// GetURLOk returns a tuple with the URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetURLOk() (*string, bool) {
	if o == nil || o.URL == nil {
		return nil, false
	}
	return o.URL, true
}

// HasURL returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasURL() bool {
	if o != nil && o.URL != nil {
		return true
	}

	return false
}

// SetURL gets a reference to the given string and assigns it to the URL field.
func (o *VulnerabilityRemediation) SetURL(v string) {
	o.URL = &v
}

// GetSupercedence returns the Supercedence field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetSupercedence() string {
	if o == nil || o.Supercedence == nil {
		var ret string
		return ret
	}
	return *o.Supercedence
}

// GetSupercedenceOk returns a tuple with the Supercedence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetSupercedenceOk() (*string, bool) {
	if o == nil || o.Supercedence == nil {
		return nil, false
	}
	return o.Supercedence, true
}

// HasSupercedence returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasSupercedence() bool {
	if o != nil && o.Supercedence != nil {
		return true
	}

	return false
}

// SetSupercedence gets a reference to the given string and assigns it to the Supercedence field.
func (o *VulnerabilityRemediation) SetSupercedence(v string) {
	o.Supercedence = &v
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetProductID() []string {
	if o == nil || o.ProductID == nil {
		var ret []string
		return ret
	}
	return o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetProductIDOk() ([]string, bool) {
	if o == nil || o.ProductID == nil {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasProductID() bool {
	if o != nil && o.ProductID != nil {
		return true
	}

	return false
}

// SetProductID gets a reference to the given []string and assigns it to the ProductID field.
func (o *VulnerabilityRemediation) SetProductID(v []string) {
	o.ProductID = v
}

// GetGroupID returns the GroupID field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetGroupID() []string {
	if o == nil || o.GroupID == nil {
		var ret []string
		return ret
	}
	return o.GroupID
}

// GetGroupIDOk returns a tuple with the GroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetGroupIDOk() ([]string, bool) {
	if o == nil || o.GroupID == nil {
		return nil, false
	}
	return o.GroupID, true
}

// HasGroupID returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasGroupID() bool {
	if o != nil && o.GroupID != nil {
		return true
	}

	return false
}

// SetGroupID gets a reference to the given []string and assigns it to the GroupID field.
func (o *VulnerabilityRemediation) SetGroupID(v []string) {
	o.GroupID = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *VulnerabilityRemediation) SetType(v int32) {
	o.Type = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetDate() time.Time {
	if o == nil || o.Date == nil {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetDateOk() (*time.Time, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *VulnerabilityRemediation) SetDate(v time.Time) {
	o.Date = &v
}

// GetDateSpecified returns the DateSpecified field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetDateSpecified() bool {
	if o == nil || o.DateSpecified == nil {
		var ret bool
		return ret
	}
	return *o.DateSpecified
}

// GetDateSpecifiedOk returns a tuple with the DateSpecified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetDateSpecifiedOk() (*bool, bool) {
	if o == nil || o.DateSpecified == nil {
		return nil, false
	}
	return o.DateSpecified, true
}

// HasDateSpecified returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasDateSpecified() bool {
	if o != nil && o.DateSpecified != nil {
		return true
	}

	return false
}

// SetDateSpecified gets a reference to the given bool and assigns it to the DateSpecified field.
func (o *VulnerabilityRemediation) SetDateSpecified(v bool) {
	o.DateSpecified = &v
}

// GetAffectedFiles returns the AffectedFiles field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetAffectedFiles() []AffectedFile {
	if o == nil || o.AffectedFiles == nil {
		var ret []AffectedFile
		return ret
	}
	return o.AffectedFiles
}

// GetAffectedFilesOk returns a tuple with the AffectedFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetAffectedFilesOk() ([]AffectedFile, bool) {
	if o == nil || o.AffectedFiles == nil {
		return nil, false
	}
	return o.AffectedFiles, true
}

// HasAffectedFiles returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasAffectedFiles() bool {
	if o != nil && o.AffectedFiles != nil {
		return true
	}

	return false
}

// SetAffectedFiles gets a reference to the given []AffectedFile and assigns it to the AffectedFiles field.
func (o *VulnerabilityRemediation) SetAffectedFiles(v []AffectedFile) {
	o.AffectedFiles = v
}

// GetRestartRequired returns the RestartRequired field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetRestartRequired() VulnerabilityRemediationRestartRequired {
	if o == nil || o.RestartRequired == nil {
		var ret VulnerabilityRemediationRestartRequired
		return ret
	}
	return *o.RestartRequired
}

// GetRestartRequiredOk returns a tuple with the RestartRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetRestartRequiredOk() (*VulnerabilityRemediationRestartRequired, bool) {
	if o == nil || o.RestartRequired == nil {
		return nil, false
	}
	return o.RestartRequired, true
}

// HasRestartRequired returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasRestartRequired() bool {
	if o != nil && o.RestartRequired != nil {
		return true
	}

	return false
}

// SetRestartRequired gets a reference to the given VulnerabilityRemediationRestartRequired and assigns it to the RestartRequired field.
func (o *VulnerabilityRemediation) SetRestartRequired(v VulnerabilityRemediationRestartRequired) {
	o.RestartRequired = &v
}

// GetSubType returns the SubType field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetSubType() string {
	if o == nil || o.SubType == nil {
		var ret string
		return ret
	}
	return *o.SubType
}

// GetSubTypeOk returns a tuple with the SubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetSubTypeOk() (*string, bool) {
	if o == nil || o.SubType == nil {
		return nil, false
	}
	return o.SubType, true
}

// HasSubType returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasSubType() bool {
	if o != nil && o.SubType != nil {
		return true
	}

	return false
}

// SetSubType gets a reference to the given string and assigns it to the SubType field.
func (o *VulnerabilityRemediation) SetSubType(v string) {
	o.SubType = &v
}

// GetFixedBuild returns the FixedBuild field value if set, zero value otherwise.
func (o *VulnerabilityRemediation) GetFixedBuild() string {
	if o == nil || o.FixedBuild == nil {
		var ret string
		return ret
	}
	return *o.FixedBuild
}

// GetFixedBuildOk returns a tuple with the FixedBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRemediation) GetFixedBuildOk() (*string, bool) {
	if o == nil || o.FixedBuild == nil {
		return nil, false
	}
	return o.FixedBuild, true
}

// HasFixedBuild returns a boolean if a field has been set.
func (o *VulnerabilityRemediation) HasFixedBuild() bool {
	if o != nil && o.FixedBuild != nil {
		return true
	}

	return false
}

// SetFixedBuild gets a reference to the given string and assigns it to the FixedBuild field.
func (o *VulnerabilityRemediation) SetFixedBuild(v string) {
	o.FixedBuild = &v
}

func (o VulnerabilityRemediation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.Entitlement != nil {
		toSerialize["Entitlement"] = o.Entitlement
	}
	if o.URL != nil {
		toSerialize["URL"] = o.URL
	}
	if o.Supercedence != nil {
		toSerialize["Supercedence"] = o.Supercedence
	}
	if o.ProductID != nil {
		toSerialize["ProductID"] = o.ProductID
	}
	if o.GroupID != nil {
		toSerialize["GroupID"] = o.GroupID
	}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	if o.Date != nil {
		toSerialize["Date"] = o.Date
	}
	if o.DateSpecified != nil {
		toSerialize["DateSpecified"] = o.DateSpecified
	}
	if o.AffectedFiles != nil {
		toSerialize["AffectedFiles"] = o.AffectedFiles
	}
	if o.RestartRequired != nil {
		toSerialize["RestartRequired"] = o.RestartRequired
	}
	if o.SubType != nil {
		toSerialize["SubType"] = o.SubType
	}
	if o.FixedBuild != nil {
		toSerialize["FixedBuild"] = o.FixedBuild
	}
	return json.Marshal(toSerialize)
}

type NullableVulnerabilityRemediation struct {
	value *VulnerabilityRemediation
	isSet bool
}

func (v NullableVulnerabilityRemediation) Get() *VulnerabilityRemediation {
	return v.value
}

func (v *NullableVulnerabilityRemediation) Set(val *VulnerabilityRemediation) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityRemediation) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityRemediation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityRemediation(val *VulnerabilityRemediation) *NullableVulnerabilityRemediation {
	return &NullableVulnerabilityRemediation{value: val, isSet: true}
}

func (v NullableVulnerabilityRemediation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityRemediation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
