/*
MSRC CVRF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AsymmetricAlgorithm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AsymmetricAlgorithm{}

// AsymmetricAlgorithm struct for AsymmetricAlgorithm
type AsymmetricAlgorithm struct {
	KeySize              *int32         `json:"keySize,omitempty"`
	LegalKeySizes        []KeySizes     `json:"legalKeySizes,omitempty"`
	SignatureAlgorithm   NullableString `json:"signatureAlgorithm,omitempty"`
	KeyExchangeAlgorithm NullableString `json:"keyExchangeAlgorithm,omitempty"`
}

// NewAsymmetricAlgorithm instantiates a new AsymmetricAlgorithm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAsymmetricAlgorithm() *AsymmetricAlgorithm {
	this := AsymmetricAlgorithm{}
	return &this
}

// NewAsymmetricAlgorithmWithDefaults instantiates a new AsymmetricAlgorithm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAsymmetricAlgorithmWithDefaults() *AsymmetricAlgorithm {
	this := AsymmetricAlgorithm{}
	return &this
}

// GetKeySize returns the KeySize field value if set, zero value otherwise.
func (o *AsymmetricAlgorithm) GetKeySize() int32 {
	if o == nil || IsNil(o.KeySize) {
		var ret int32
		return ret
	}
	return *o.KeySize
}

// GetKeySizeOk returns a tuple with the KeySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AsymmetricAlgorithm) GetKeySizeOk() (*int32, bool) {
	if o == nil || IsNil(o.KeySize) {
		return nil, false
	}
	return o.KeySize, true
}

// HasKeySize returns a boolean if a field has been set.
func (o *AsymmetricAlgorithm) HasKeySize() bool {
	if o != nil && !IsNil(o.KeySize) {
		return true
	}

	return false
}

// SetKeySize gets a reference to the given int32 and assigns it to the KeySize field.
func (o *AsymmetricAlgorithm) SetKeySize(v int32) {
	o.KeySize = &v
}

// GetLegalKeySizes returns the LegalKeySizes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AsymmetricAlgorithm) GetLegalKeySizes() []KeySizes {
	if o == nil {
		var ret []KeySizes
		return ret
	}
	return o.LegalKeySizes
}

// GetLegalKeySizesOk returns a tuple with the LegalKeySizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AsymmetricAlgorithm) GetLegalKeySizesOk() ([]KeySizes, bool) {
	if o == nil || IsNil(o.LegalKeySizes) {
		return nil, false
	}
	return o.LegalKeySizes, true
}

// HasLegalKeySizes returns a boolean if a field has been set.
func (o *AsymmetricAlgorithm) HasLegalKeySizes() bool {
	if o != nil && !IsNil(o.LegalKeySizes) {
		return true
	}

	return false
}

// SetLegalKeySizes gets a reference to the given []KeySizes and assigns it to the LegalKeySizes field.
func (o *AsymmetricAlgorithm) SetLegalKeySizes(v []KeySizes) {
	o.LegalKeySizes = v
}

// GetSignatureAlgorithm returns the SignatureAlgorithm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AsymmetricAlgorithm) GetSignatureAlgorithm() string {
	if o == nil || IsNil(o.SignatureAlgorithm.Get()) {
		var ret string
		return ret
	}
	return *o.SignatureAlgorithm.Get()
}

// GetSignatureAlgorithmOk returns a tuple with the SignatureAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AsymmetricAlgorithm) GetSignatureAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SignatureAlgorithm.Get(), o.SignatureAlgorithm.IsSet()
}

// HasSignatureAlgorithm returns a boolean if a field has been set.
func (o *AsymmetricAlgorithm) HasSignatureAlgorithm() bool {
	if o != nil && o.SignatureAlgorithm.IsSet() {
		return true
	}

	return false
}

// SetSignatureAlgorithm gets a reference to the given NullableString and assigns it to the SignatureAlgorithm field.
func (o *AsymmetricAlgorithm) SetSignatureAlgorithm(v string) {
	o.SignatureAlgorithm.Set(&v)
}

// SetSignatureAlgorithmNil sets the value for SignatureAlgorithm to be an explicit nil
func (o *AsymmetricAlgorithm) SetSignatureAlgorithmNil() {
	o.SignatureAlgorithm.Set(nil)
}

// UnsetSignatureAlgorithm ensures that no value is present for SignatureAlgorithm, not even an explicit nil
func (o *AsymmetricAlgorithm) UnsetSignatureAlgorithm() {
	o.SignatureAlgorithm.Unset()
}

// GetKeyExchangeAlgorithm returns the KeyExchangeAlgorithm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AsymmetricAlgorithm) GetKeyExchangeAlgorithm() string {
	if o == nil || IsNil(o.KeyExchangeAlgorithm.Get()) {
		var ret string
		return ret
	}
	return *o.KeyExchangeAlgorithm.Get()
}

// GetKeyExchangeAlgorithmOk returns a tuple with the KeyExchangeAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AsymmetricAlgorithm) GetKeyExchangeAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeyExchangeAlgorithm.Get(), o.KeyExchangeAlgorithm.IsSet()
}

// HasKeyExchangeAlgorithm returns a boolean if a field has been set.
func (o *AsymmetricAlgorithm) HasKeyExchangeAlgorithm() bool {
	if o != nil && o.KeyExchangeAlgorithm.IsSet() {
		return true
	}

	return false
}

// SetKeyExchangeAlgorithm gets a reference to the given NullableString and assigns it to the KeyExchangeAlgorithm field.
func (o *AsymmetricAlgorithm) SetKeyExchangeAlgorithm(v string) {
	o.KeyExchangeAlgorithm.Set(&v)
}

// SetKeyExchangeAlgorithmNil sets the value for KeyExchangeAlgorithm to be an explicit nil
func (o *AsymmetricAlgorithm) SetKeyExchangeAlgorithmNil() {
	o.KeyExchangeAlgorithm.Set(nil)
}

// UnsetKeyExchangeAlgorithm ensures that no value is present for KeyExchangeAlgorithm, not even an explicit nil
func (o *AsymmetricAlgorithm) UnsetKeyExchangeAlgorithm() {
	o.KeyExchangeAlgorithm.Unset()
}

func (o AsymmetricAlgorithm) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AsymmetricAlgorithm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KeySize) {
		toSerialize["keySize"] = o.KeySize
	}
	if o.LegalKeySizes != nil {
		toSerialize["legalKeySizes"] = o.LegalKeySizes
	}
	if o.SignatureAlgorithm.IsSet() {
		toSerialize["signatureAlgorithm"] = o.SignatureAlgorithm.Get()
	}
	if o.KeyExchangeAlgorithm.IsSet() {
		toSerialize["keyExchangeAlgorithm"] = o.KeyExchangeAlgorithm.Get()
	}
	return toSerialize, nil
}

type NullableAsymmetricAlgorithm struct {
	value *AsymmetricAlgorithm
	isSet bool
}

func (v NullableAsymmetricAlgorithm) Get() *AsymmetricAlgorithm {
	return v.value
}

func (v *NullableAsymmetricAlgorithm) Set(val *AsymmetricAlgorithm) {
	v.value = val
	v.isSet = true
}

func (v NullableAsymmetricAlgorithm) IsSet() bool {
	return v.isSet
}

func (v *NullableAsymmetricAlgorithm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAsymmetricAlgorithm(val *AsymmetricAlgorithm) *NullableAsymmetricAlgorithm {
	return &NullableAsymmetricAlgorithm{value: val, isSet: true}
}

func (v NullableAsymmetricAlgorithm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAsymmetricAlgorithm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
