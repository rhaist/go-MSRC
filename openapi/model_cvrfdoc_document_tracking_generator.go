/*
 * MSRC CVRF API
 *
 * Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_
 *
 * API version: v2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CvrfdocDocumentTrackingGenerator struct for CvrfdocDocumentTrackingGenerator
type CvrfdocDocumentTrackingGenerator struct {
	Engine        *CvrfdocDocumentTrackingGeneratorEngine `json:"Engine,omitempty"`
	Date          *time.Time                              `json:"Date,omitempty"`
	DateSpecified *bool                                   `json:"DateSpecified,omitempty"`
}

// NewCvrfdocDocumentTrackingGenerator instantiates a new CvrfdocDocumentTrackingGenerator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCvrfdocDocumentTrackingGenerator() *CvrfdocDocumentTrackingGenerator {
	this := CvrfdocDocumentTrackingGenerator{}
	return &this
}

// NewCvrfdocDocumentTrackingGeneratorWithDefaults instantiates a new CvrfdocDocumentTrackingGenerator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCvrfdocDocumentTrackingGeneratorWithDefaults() *CvrfdocDocumentTrackingGenerator {
	this := CvrfdocDocumentTrackingGenerator{}
	return &this
}

// GetEngine returns the Engine field value if set, zero value otherwise.
func (o *CvrfdocDocumentTrackingGenerator) GetEngine() CvrfdocDocumentTrackingGeneratorEngine {
	if o == nil || o.Engine == nil {
		var ret CvrfdocDocumentTrackingGeneratorEngine
		return ret
	}
	return *o.Engine
}

// GetEngineOk returns a tuple with the Engine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTrackingGenerator) GetEngineOk() (*CvrfdocDocumentTrackingGeneratorEngine, bool) {
	if o == nil || o.Engine == nil {
		return nil, false
	}
	return o.Engine, true
}

// HasEngine returns a boolean if a field has been set.
func (o *CvrfdocDocumentTrackingGenerator) HasEngine() bool {
	if o != nil && o.Engine != nil {
		return true
	}

	return false
}

// SetEngine gets a reference to the given CvrfdocDocumentTrackingGeneratorEngine and assigns it to the Engine field.
func (o *CvrfdocDocumentTrackingGenerator) SetEngine(v CvrfdocDocumentTrackingGeneratorEngine) {
	o.Engine = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *CvrfdocDocumentTrackingGenerator) GetDate() time.Time {
	if o == nil || o.Date == nil {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTrackingGenerator) GetDateOk() (*time.Time, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *CvrfdocDocumentTrackingGenerator) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *CvrfdocDocumentTrackingGenerator) SetDate(v time.Time) {
	o.Date = &v
}

// GetDateSpecified returns the DateSpecified field value if set, zero value otherwise.
func (o *CvrfdocDocumentTrackingGenerator) GetDateSpecified() bool {
	if o == nil || o.DateSpecified == nil {
		var ret bool
		return ret
	}
	return *o.DateSpecified
}

// GetDateSpecifiedOk returns a tuple with the DateSpecified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CvrfdocDocumentTrackingGenerator) GetDateSpecifiedOk() (*bool, bool) {
	if o == nil || o.DateSpecified == nil {
		return nil, false
	}
	return o.DateSpecified, true
}

// HasDateSpecified returns a boolean if a field has been set.
func (o *CvrfdocDocumentTrackingGenerator) HasDateSpecified() bool {
	if o != nil && o.DateSpecified != nil {
		return true
	}

	return false
}

// SetDateSpecified gets a reference to the given bool and assigns it to the DateSpecified field.
func (o *CvrfdocDocumentTrackingGenerator) SetDateSpecified(v bool) {
	o.DateSpecified = &v
}

func (o CvrfdocDocumentTrackingGenerator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Engine != nil {
		toSerialize["Engine"] = o.Engine
	}
	if o.Date != nil {
		toSerialize["Date"] = o.Date
	}
	if o.DateSpecified != nil {
		toSerialize["DateSpecified"] = o.DateSpecified
	}
	return json.Marshal(toSerialize)
}

type NullableCvrfdocDocumentTrackingGenerator struct {
	value *CvrfdocDocumentTrackingGenerator
	isSet bool
}

func (v NullableCvrfdocDocumentTrackingGenerator) Get() *CvrfdocDocumentTrackingGenerator {
	return v.value
}

func (v *NullableCvrfdocDocumentTrackingGenerator) Set(val *CvrfdocDocumentTrackingGenerator) {
	v.value = val
	v.isSet = true
}

func (v NullableCvrfdocDocumentTrackingGenerator) IsSet() bool {
	return v.isSet
}

func (v *NullableCvrfdocDocumentTrackingGenerator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCvrfdocDocumentTrackingGenerator(val *CvrfdocDocumentTrackingGenerator) *NullableCvrfdocDocumentTrackingGenerator {
	return &NullableCvrfdocDocumentTrackingGenerator{value: val, isSet: true}
}

func (v NullableCvrfdocDocumentTrackingGenerator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCvrfdocDocumentTrackingGenerator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
