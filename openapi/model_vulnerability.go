/*
MSRC CVRF API

Get security updates programmatically using this RESTful API. Sample client code is available on the [Microsoft Security Updates GitHub](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API). For more details, please visit [msrc.microsoft.com/update-guide](https://msrc.microsoft.com/update-guide).    _**NOTE: If you're looking for the Engage API (CARS), please refer to the new [Abuse Reporting developer portal](https://msrc.microsoft.com/report/developer).**_

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Vulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Vulnerability{}

// Vulnerability struct for Vulnerability
type Vulnerability struct {
	Title                  *VulnerabilityTitle               `json:"Title,omitempty"`
	ID                     *VulnerabilityID                  `json:"ID,omitempty"`
	Notes                  []VulnerabilityNote               `json:"Notes,omitempty"`
	DiscoveryDate          *time.Time                        `json:"DiscoveryDate,omitempty"`
	DiscoveryDateSpecified *bool                             `json:"DiscoveryDateSpecified,omitempty"`
	ReleaseDate            *time.Time                        `json:"ReleaseDate,omitempty"`
	ReleaseDateSpecified   *bool                             `json:"ReleaseDateSpecified,omitempty"`
	Involvements           []VulnerabilityInvolvement        `json:"Involvements,omitempty"`
	CVE                    *string                           `json:"CVE,omitempty"`
	CWE                    []VulnerabilityCWE                `json:"CWE,omitempty"`
	ProductStatuses        []VulnerabilityStatus             `json:"ProductStatuses,omitempty"`
	Threats                []VulnerabilityThreat             `json:"Threats,omitempty"`
	CVSSScoreSets          []VulnerabilityScoreSet           `json:"CVSSScoreSets,omitempty"`
	Remediations           []VulnerabilityRemediation        `json:"Remediations,omitempty"`
	References             []VulnerabilityReference          `json:"References,omitempty"`
	Acknowledgments        []VulnerabilityAcknowledgment     `json:"Acknowledgments,omitempty"`
	Ordinal                *string                           `json:"Ordinal,omitempty"`
	RevisionHistory        []CvrfdocDocumentTrackingRevision `json:"RevisionHistory,omitempty"`
}

// NewVulnerability instantiates a new Vulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerability() *Vulnerability {
	this := Vulnerability{}
	return &this
}

// NewVulnerabilityWithDefaults instantiates a new Vulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityWithDefaults() *Vulnerability {
	this := Vulnerability{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Vulnerability) GetTitle() VulnerabilityTitle {
	if o == nil || IsNil(o.Title) {
		var ret VulnerabilityTitle
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetTitleOk() (*VulnerabilityTitle, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Vulnerability) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given VulnerabilityTitle and assigns it to the Title field.
func (o *Vulnerability) SetTitle(v VulnerabilityTitle) {
	o.Title = &v
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *Vulnerability) GetID() VulnerabilityID {
	if o == nil || IsNil(o.ID) {
		var ret VulnerabilityID
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetIDOk() (*VulnerabilityID, bool) {
	if o == nil || IsNil(o.ID) {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *Vulnerability) HasID() bool {
	if o != nil && !IsNil(o.ID) {
		return true
	}

	return false
}

// SetID gets a reference to the given VulnerabilityID and assigns it to the ID field.
func (o *Vulnerability) SetID(v VulnerabilityID) {
	o.ID = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Vulnerability) GetNotes() []VulnerabilityNote {
	if o == nil || IsNil(o.Notes) {
		var ret []VulnerabilityNote
		return ret
	}
	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetNotesOk() ([]VulnerabilityNote, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Vulnerability) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []VulnerabilityNote and assigns it to the Notes field.
func (o *Vulnerability) SetNotes(v []VulnerabilityNote) {
	o.Notes = v
}

// GetDiscoveryDate returns the DiscoveryDate field value if set, zero value otherwise.
func (o *Vulnerability) GetDiscoveryDate() time.Time {
	if o == nil || IsNil(o.DiscoveryDate) {
		var ret time.Time
		return ret
	}
	return *o.DiscoveryDate
}

// GetDiscoveryDateOk returns a tuple with the DiscoveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetDiscoveryDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DiscoveryDate) {
		return nil, false
	}
	return o.DiscoveryDate, true
}

// HasDiscoveryDate returns a boolean if a field has been set.
func (o *Vulnerability) HasDiscoveryDate() bool {
	if o != nil && !IsNil(o.DiscoveryDate) {
		return true
	}

	return false
}

// SetDiscoveryDate gets a reference to the given time.Time and assigns it to the DiscoveryDate field.
func (o *Vulnerability) SetDiscoveryDate(v time.Time) {
	o.DiscoveryDate = &v
}

// GetDiscoveryDateSpecified returns the DiscoveryDateSpecified field value if set, zero value otherwise.
func (o *Vulnerability) GetDiscoveryDateSpecified() bool {
	if o == nil || IsNil(o.DiscoveryDateSpecified) {
		var ret bool
		return ret
	}
	return *o.DiscoveryDateSpecified
}

// GetDiscoveryDateSpecifiedOk returns a tuple with the DiscoveryDateSpecified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetDiscoveryDateSpecifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.DiscoveryDateSpecified) {
		return nil, false
	}
	return o.DiscoveryDateSpecified, true
}

// HasDiscoveryDateSpecified returns a boolean if a field has been set.
func (o *Vulnerability) HasDiscoveryDateSpecified() bool {
	if o != nil && !IsNil(o.DiscoveryDateSpecified) {
		return true
	}

	return false
}

// SetDiscoveryDateSpecified gets a reference to the given bool and assigns it to the DiscoveryDateSpecified field.
func (o *Vulnerability) SetDiscoveryDateSpecified(v bool) {
	o.DiscoveryDateSpecified = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *Vulnerability) GetReleaseDate() time.Time {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret time.Time
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetReleaseDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *Vulnerability) HasReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given time.Time and assigns it to the ReleaseDate field.
func (o *Vulnerability) SetReleaseDate(v time.Time) {
	o.ReleaseDate = &v
}

// GetReleaseDateSpecified returns the ReleaseDateSpecified field value if set, zero value otherwise.
func (o *Vulnerability) GetReleaseDateSpecified() bool {
	if o == nil || IsNil(o.ReleaseDateSpecified) {
		var ret bool
		return ret
	}
	return *o.ReleaseDateSpecified
}

// GetReleaseDateSpecifiedOk returns a tuple with the ReleaseDateSpecified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetReleaseDateSpecifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.ReleaseDateSpecified) {
		return nil, false
	}
	return o.ReleaseDateSpecified, true
}

// HasReleaseDateSpecified returns a boolean if a field has been set.
func (o *Vulnerability) HasReleaseDateSpecified() bool {
	if o != nil && !IsNil(o.ReleaseDateSpecified) {
		return true
	}

	return false
}

// SetReleaseDateSpecified gets a reference to the given bool and assigns it to the ReleaseDateSpecified field.
func (o *Vulnerability) SetReleaseDateSpecified(v bool) {
	o.ReleaseDateSpecified = &v
}

// GetInvolvements returns the Involvements field value if set, zero value otherwise.
func (o *Vulnerability) GetInvolvements() []VulnerabilityInvolvement {
	if o == nil || IsNil(o.Involvements) {
		var ret []VulnerabilityInvolvement
		return ret
	}
	return o.Involvements
}

// GetInvolvementsOk returns a tuple with the Involvements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetInvolvementsOk() ([]VulnerabilityInvolvement, bool) {
	if o == nil || IsNil(o.Involvements) {
		return nil, false
	}
	return o.Involvements, true
}

// HasInvolvements returns a boolean if a field has been set.
func (o *Vulnerability) HasInvolvements() bool {
	if o != nil && !IsNil(o.Involvements) {
		return true
	}

	return false
}

// SetInvolvements gets a reference to the given []VulnerabilityInvolvement and assigns it to the Involvements field.
func (o *Vulnerability) SetInvolvements(v []VulnerabilityInvolvement) {
	o.Involvements = v
}

// GetCVE returns the CVE field value if set, zero value otherwise.
func (o *Vulnerability) GetCVE() string {
	if o == nil || IsNil(o.CVE) {
		var ret string
		return ret
	}
	return *o.CVE
}

// GetCVEOk returns a tuple with the CVE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetCVEOk() (*string, bool) {
	if o == nil || IsNil(o.CVE) {
		return nil, false
	}
	return o.CVE, true
}

// HasCVE returns a boolean if a field has been set.
func (o *Vulnerability) HasCVE() bool {
	if o != nil && !IsNil(o.CVE) {
		return true
	}

	return false
}

// SetCVE gets a reference to the given string and assigns it to the CVE field.
func (o *Vulnerability) SetCVE(v string) {
	o.CVE = &v
}

// GetCWE returns the CWE field value if set, zero value otherwise.
func (o *Vulnerability) GetCWE() []VulnerabilityCWE {
	if o == nil || IsNil(o.CWE) {
		var ret []VulnerabilityCWE
		return ret
	}
	return o.CWE
}

// GetCWEOk returns a tuple with the CWE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetCWEOk() ([]VulnerabilityCWE, bool) {
	if o == nil || IsNil(o.CWE) {
		return nil, false
	}
	return o.CWE, true
}

// HasCWE returns a boolean if a field has been set.
func (o *Vulnerability) HasCWE() bool {
	if o != nil && !IsNil(o.CWE) {
		return true
	}

	return false
}

// SetCWE gets a reference to the given []VulnerabilityCWE and assigns it to the CWE field.
func (o *Vulnerability) SetCWE(v []VulnerabilityCWE) {
	o.CWE = v
}

// GetProductStatuses returns the ProductStatuses field value if set, zero value otherwise.
func (o *Vulnerability) GetProductStatuses() []VulnerabilityStatus {
	if o == nil || IsNil(o.ProductStatuses) {
		var ret []VulnerabilityStatus
		return ret
	}
	return o.ProductStatuses
}

// GetProductStatusesOk returns a tuple with the ProductStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetProductStatusesOk() ([]VulnerabilityStatus, bool) {
	if o == nil || IsNil(o.ProductStatuses) {
		return nil, false
	}
	return o.ProductStatuses, true
}

// HasProductStatuses returns a boolean if a field has been set.
func (o *Vulnerability) HasProductStatuses() bool {
	if o != nil && !IsNil(o.ProductStatuses) {
		return true
	}

	return false
}

// SetProductStatuses gets a reference to the given []VulnerabilityStatus and assigns it to the ProductStatuses field.
func (o *Vulnerability) SetProductStatuses(v []VulnerabilityStatus) {
	o.ProductStatuses = v
}

// GetThreats returns the Threats field value if set, zero value otherwise.
func (o *Vulnerability) GetThreats() []VulnerabilityThreat {
	if o == nil || IsNil(o.Threats) {
		var ret []VulnerabilityThreat
		return ret
	}
	return o.Threats
}

// GetThreatsOk returns a tuple with the Threats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetThreatsOk() ([]VulnerabilityThreat, bool) {
	if o == nil || IsNil(o.Threats) {
		return nil, false
	}
	return o.Threats, true
}

// HasThreats returns a boolean if a field has been set.
func (o *Vulnerability) HasThreats() bool {
	if o != nil && !IsNil(o.Threats) {
		return true
	}

	return false
}

// SetThreats gets a reference to the given []VulnerabilityThreat and assigns it to the Threats field.
func (o *Vulnerability) SetThreats(v []VulnerabilityThreat) {
	o.Threats = v
}

// GetCVSSScoreSets returns the CVSSScoreSets field value if set, zero value otherwise.
func (o *Vulnerability) GetCVSSScoreSets() []VulnerabilityScoreSet {
	if o == nil || IsNil(o.CVSSScoreSets) {
		var ret []VulnerabilityScoreSet
		return ret
	}
	return o.CVSSScoreSets
}

// GetCVSSScoreSetsOk returns a tuple with the CVSSScoreSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetCVSSScoreSetsOk() ([]VulnerabilityScoreSet, bool) {
	if o == nil || IsNil(o.CVSSScoreSets) {
		return nil, false
	}
	return o.CVSSScoreSets, true
}

// HasCVSSScoreSets returns a boolean if a field has been set.
func (o *Vulnerability) HasCVSSScoreSets() bool {
	if o != nil && !IsNil(o.CVSSScoreSets) {
		return true
	}

	return false
}

// SetCVSSScoreSets gets a reference to the given []VulnerabilityScoreSet and assigns it to the CVSSScoreSets field.
func (o *Vulnerability) SetCVSSScoreSets(v []VulnerabilityScoreSet) {
	o.CVSSScoreSets = v
}

// GetRemediations returns the Remediations field value if set, zero value otherwise.
func (o *Vulnerability) GetRemediations() []VulnerabilityRemediation {
	if o == nil || IsNil(o.Remediations) {
		var ret []VulnerabilityRemediation
		return ret
	}
	return o.Remediations
}

// GetRemediationsOk returns a tuple with the Remediations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetRemediationsOk() ([]VulnerabilityRemediation, bool) {
	if o == nil || IsNil(o.Remediations) {
		return nil, false
	}
	return o.Remediations, true
}

// HasRemediations returns a boolean if a field has been set.
func (o *Vulnerability) HasRemediations() bool {
	if o != nil && !IsNil(o.Remediations) {
		return true
	}

	return false
}

// SetRemediations gets a reference to the given []VulnerabilityRemediation and assigns it to the Remediations field.
func (o *Vulnerability) SetRemediations(v []VulnerabilityRemediation) {
	o.Remediations = v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *Vulnerability) GetReferences() []VulnerabilityReference {
	if o == nil || IsNil(o.References) {
		var ret []VulnerabilityReference
		return ret
	}
	return o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetReferencesOk() ([]VulnerabilityReference, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *Vulnerability) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given []VulnerabilityReference and assigns it to the References field.
func (o *Vulnerability) SetReferences(v []VulnerabilityReference) {
	o.References = v
}

// GetAcknowledgments returns the Acknowledgments field value if set, zero value otherwise.
func (o *Vulnerability) GetAcknowledgments() []VulnerabilityAcknowledgment {
	if o == nil || IsNil(o.Acknowledgments) {
		var ret []VulnerabilityAcknowledgment
		return ret
	}
	return o.Acknowledgments
}

// GetAcknowledgmentsOk returns a tuple with the Acknowledgments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetAcknowledgmentsOk() ([]VulnerabilityAcknowledgment, bool) {
	if o == nil || IsNil(o.Acknowledgments) {
		return nil, false
	}
	return o.Acknowledgments, true
}

// HasAcknowledgments returns a boolean if a field has been set.
func (o *Vulnerability) HasAcknowledgments() bool {
	if o != nil && !IsNil(o.Acknowledgments) {
		return true
	}

	return false
}

// SetAcknowledgments gets a reference to the given []VulnerabilityAcknowledgment and assigns it to the Acknowledgments field.
func (o *Vulnerability) SetAcknowledgments(v []VulnerabilityAcknowledgment) {
	o.Acknowledgments = v
}

// GetOrdinal returns the Ordinal field value if set, zero value otherwise.
func (o *Vulnerability) GetOrdinal() string {
	if o == nil || IsNil(o.Ordinal) {
		var ret string
		return ret
	}
	return *o.Ordinal
}

// GetOrdinalOk returns a tuple with the Ordinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetOrdinalOk() (*string, bool) {
	if o == nil || IsNil(o.Ordinal) {
		return nil, false
	}
	return o.Ordinal, true
}

// HasOrdinal returns a boolean if a field has been set.
func (o *Vulnerability) HasOrdinal() bool {
	if o != nil && !IsNil(o.Ordinal) {
		return true
	}

	return false
}

// SetOrdinal gets a reference to the given string and assigns it to the Ordinal field.
func (o *Vulnerability) SetOrdinal(v string) {
	o.Ordinal = &v
}

// GetRevisionHistory returns the RevisionHistory field value if set, zero value otherwise.
func (o *Vulnerability) GetRevisionHistory() []CvrfdocDocumentTrackingRevision {
	if o == nil || IsNil(o.RevisionHistory) {
		var ret []CvrfdocDocumentTrackingRevision
		return ret
	}
	return o.RevisionHistory
}

// GetRevisionHistoryOk returns a tuple with the RevisionHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetRevisionHistoryOk() ([]CvrfdocDocumentTrackingRevision, bool) {
	if o == nil || IsNil(o.RevisionHistory) {
		return nil, false
	}
	return o.RevisionHistory, true
}

// HasRevisionHistory returns a boolean if a field has been set.
func (o *Vulnerability) HasRevisionHistory() bool {
	if o != nil && !IsNil(o.RevisionHistory) {
		return true
	}

	return false
}

// SetRevisionHistory gets a reference to the given []CvrfdocDocumentTrackingRevision and assigns it to the RevisionHistory field.
func (o *Vulnerability) SetRevisionHistory(v []CvrfdocDocumentTrackingRevision) {
	o.RevisionHistory = v
}

func (o Vulnerability) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Vulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["Title"] = o.Title
	}
	if !IsNil(o.ID) {
		toSerialize["ID"] = o.ID
	}
	if !IsNil(o.Notes) {
		toSerialize["Notes"] = o.Notes
	}
	if !IsNil(o.DiscoveryDate) {
		toSerialize["DiscoveryDate"] = o.DiscoveryDate
	}
	if !IsNil(o.DiscoveryDateSpecified) {
		toSerialize["DiscoveryDateSpecified"] = o.DiscoveryDateSpecified
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["ReleaseDate"] = o.ReleaseDate
	}
	if !IsNil(o.ReleaseDateSpecified) {
		toSerialize["ReleaseDateSpecified"] = o.ReleaseDateSpecified
	}
	if !IsNil(o.Involvements) {
		toSerialize["Involvements"] = o.Involvements
	}
	if !IsNil(o.CVE) {
		toSerialize["CVE"] = o.CVE
	}
	if !IsNil(o.CWE) {
		toSerialize["CWE"] = o.CWE
	}
	if !IsNil(o.ProductStatuses) {
		toSerialize["ProductStatuses"] = o.ProductStatuses
	}
	if !IsNil(o.Threats) {
		toSerialize["Threats"] = o.Threats
	}
	if !IsNil(o.CVSSScoreSets) {
		toSerialize["CVSSScoreSets"] = o.CVSSScoreSets
	}
	if !IsNil(o.Remediations) {
		toSerialize["Remediations"] = o.Remediations
	}
	if !IsNil(o.References) {
		toSerialize["References"] = o.References
	}
	if !IsNil(o.Acknowledgments) {
		toSerialize["Acknowledgments"] = o.Acknowledgments
	}
	if !IsNil(o.Ordinal) {
		toSerialize["Ordinal"] = o.Ordinal
	}
	if !IsNil(o.RevisionHistory) {
		toSerialize["RevisionHistory"] = o.RevisionHistory
	}
	return toSerialize, nil
}

type NullableVulnerability struct {
	value *Vulnerability
	isSet bool
}

func (v NullableVulnerability) Get() *Vulnerability {
	return v.value
}

func (v *NullableVulnerability) Set(val *Vulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerability(val *Vulnerability) *NullableVulnerability {
	return &NullableVulnerability{value: val, isSet: true}
}

func (v NullableVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
